;; Object emacs/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "emacs/"
  :tables (list 
   (semanticdb-table "js2.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("cl" include nil nil [4954 4967]) ("cc-mode" include nil nil [4990 5008]) ("cc-langs" include nil nil [5054 5073]) ("cc-engine" include nil nil [5106 5126]) ("js2-emacs22" variable (:default-value (>= emacs-major-version 22)) nil [5164 5212]) ("js2-highlight-level" variable (:default-value 2) nil [5214 5504]) ("js2-mode-dev-mode-p" variable nil nil [5506 5597]) ("defgroup" code nil nil [5599 5675]) ("js2-basic-offset" variable (:default-value (if (and (boundp (quote c-basic-offset)) (numberp c-basic-offset)) c-basic-offset 2)) nil [5677 5997]) ("make-variable-buffer-local" code nil nil [5998 6044]) ("js2-cleanup-whitespace" variable (:default-value t) nil [6046 6183]) ("js2-move-point-on-right-click" variable (:default-value t) nil [6185 6674]) ("js2-mirror-mode" variable (:default-value t) nil [6676 6809]) ("js2-auto-indent-flag" variable (:default-value t) nil [6811 7017]) ("js2-bounce-indent-flag" variable (:default-value t) nil [7019 7559]) ("js2-indent-on-enter-key" variable nil nil [7561 7755]) ("js2-enter-indents-newline" variable (:default-value t) nil [7757 7966]) ("js2-rebind-eol-bol-keys" variable (:default-value t) nil [7968 8174]) ("js2-electric-keys" variable (:default-value (quote ("{" "}" "(" ")" "[" "]" ":" ";" "," "*"))) nil [8176 8397]) ("js2-idle-timer-delay" variable (:default-value 0.2) nil [8399 8590]) ("make-variable-buffer-local" code nil nil [8591 8641]) ("js2-dynamic-idle-timer-adjust" variable nil nil [8643 9267]) ("js2-mode-escape-quotes" variable (:default-value t) nil [9269 9405]) ("js2-mode-squeeze-spaces" variable (:default-value t) nil [9407 9599]) ("js2-mode-show-parse-errors" variable (:default-value t) nil [9601 9713]) ("js2-mode-show-strict-warnings" variable (:default-value t) nil [9715 9937]) ("js2-strict-trailing-comma-warning" variable (:default-value t) nil [9939 10213]) ("js2-strict-missing-semi-warning" variable (:default-value t) nil [10215 10452]) ("js2-missing-semi-one-line-override" variable nil nil [10454 10826]) ("js2-strict-inconsistent-return-warning" variable (:default-value t) nil [10828 11169]) ("js2-strict-cond-assign-warning" variable (:default-value t) nil [11171 11485]) ("js2-strict-cond-assign-warning" variable (:default-value t) nil [11487 11801]) ("js2-strict-var-redeclaration-warning" variable (:default-value t) nil [11803 11962]) ("js2-strict-var-hides-function-arg-warning" variable (:default-value t) nil [11964 12120]) ("js2-skip-preprocessor-directives" variable nil nil [12122 12314]) ("js2-basic-offset" variable (:default-value c-basic-offset) nil [12316 12452]) ("make-variable-buffer-local" code nil nil [12453 12499]) ("js2-language-version" variable (:default-value 170) nil [12501 12831]) ("js2-allow-keywords-as-property-names" variable (:default-value t) nil [12833 13128]) ("js2-instanceof-has-side-effects" variable nil nil [13130 13319]) ("js2-allow-rhino-new-expr-initializer" variable nil nil [13321 13918]) ("js2-allow-member-expr-as-function-name" variable nil nil [13920 14787]) ("js2-mode-version" variable (:default-value 20080616) nil [14789 14858]) ("js2-token-beg" variable (:default-value 1) nil [14937 14961]) ("make-variable-buffer-local" code nil nil [14962 15005]) ("js2-token-end" variable (:default-value -1) nil [15006 15031]) ("make-variable-buffer-local" code nil nil [15032 15075]) ("js2-EOF_CHAR" variable (:default-value -1) nil [15077 15166]) ("js2-ERROR" variable (:default-value -1) nil [15366 15387]) ("js2-EOF" variable nil nil [15388 15406]) ("js2-EOL" variable (:default-value 1) nil [15407 15425]) ("js2-ENTERWITH" variable (:default-value 2) nil [15426 15450]) ("js2-LEAVEWITH" variable (:default-value 3) nil [15487 15511]) ("js2-RETURN" variable (:default-value 4) nil [15512 15533]) ("js2-GOTO" variable (:default-value 5) nil [15534 15553]) ("js2-IFEQ" variable (:default-value 6) nil [15554 15573]) ("js2-IFNE" variable (:default-value 7) nil [15574 15593]) ("js2-SETNAME" variable (:default-value 8) nil [15594 15616]) ("js2-BITOR" variable (:default-value 9) nil [15617 15637]) ("js2-BITXOR" variable (:default-value 10) nil [15638 15660]) ("js2-BITAND" variable (:default-value 11) nil [15661 15683]) ("js2-EQ" variable (:default-value 12) nil [15684 15702]) ("js2-NE" variable (:default-value 13) nil [15703 15721]) ("js2-LT" variable (:default-value 14) nil [15722 15740]) ("js2-LE" variable (:default-value 15) nil [15741 15759]) ("js2-GT" variable (:default-value 16) nil [15760 15778]) ("js2-GE" variable (:default-value 17) nil [15779 15797]) ("js2-LSH" variable (:default-value 18) nil [15798 15817]) ("js2-RSH" variable (:default-value 19) nil [15818 15837]) ("js2-URSH" variable (:default-value 20) nil [15838 15858]) ("js2-ADD" variable (:default-value 21) nil [15859 15878]) ("js2-SUB" variable (:default-value 22) nil [15903 15922]) ("js2-MUL" variable (:default-value 23) nil [15948 15967]) ("js2-DIV" variable (:default-value 24) nil [15968 15987]) ("js2-MOD" variable (:default-value 25) nil [15988 16007]) ("js2-NOT" variable (:default-value 26) nil [16008 16027]) ("js2-BITNOT" variable (:default-value 27) nil [16028 16050]) ("js2-POS" variable (:default-value 28) nil [16051 16070]) ("js2-NEG" variable (:default-value 29) nil [16095 16114]) ("js2-NEW" variable (:default-value 30) nil [16140 16159]) ("js2-DELPROP" variable (:default-value 31) nil [16160 16183]) ("js2-TYPEOF" variable (:default-value 32) nil [16184 16206]) ("js2-GETPROP" variable (:default-value 33) nil [16207 16230]) ("js2-GETPROPNOWARN" variable (:default-value 34) nil [16231 16260]) ("js2-SETPROP" variable (:default-value 35) nil [16261 16284]) ("js2-GETELEM" variable (:default-value 36) nil [16285 16308]) ("js2-SETELEM" variable (:default-value 37) nil [16309 16332]) ("js2-CALL" variable (:default-value 38) nil [16333 16353]) ("js2-NAME" variable (:default-value 39) nil [16354 16374]) ("js2-NUMBER" variable (:default-value 40) nil [16401 16423]) ("js2-STRING" variable (:default-value 41) nil [16424 16446]) ("js2-NULL" variable (:default-value 42) nil [16447 16467]) ("js2-THIS" variable (:default-value 43) nil [16468 16488]) ("js2-FALSE" variable (:default-value 44) nil [16489 16510]) ("js2-TRUE" variable (:default-value 45) nil [16511 16531]) ("js2-SHEQ" variable (:default-value 46) nil [16532 16552]) ("js2-SHNE" variable (:default-value 47) nil [16588 16608]) ("js2-REGEXP" variable (:default-value 48) nil [16646 16668]) ("js2-BINDNAME" variable (:default-value 49) nil [16669 16693]) ("js2-THROW" variable (:default-value 50) nil [16694 16715]) ("js2-RETHROW" variable (:default-value 51) nil [16716 16739]) ("js2-IN" variable (:default-value 52) nil [16797 16815]) ("js2-INSTANCEOF" variable (:default-value 53) nil [16816 16842]) ("js2-LOCAL_LOAD" variable (:default-value 54) nil [16843 16869]) ("js2-GETVAR" variable (:default-value 55) nil [16870 16892]) ("js2-SETVAR" variable (:default-value 56) nil [16893 16915]) ("js2-CATCH_SCOPE" variable (:default-value 57) nil [16916 16943]) ("js2-ENUM_INIT_KEYS" variable (:default-value 58) nil [16944 16974]) ("js2-ENUM_INIT_VALUES" variable (:default-value 59) nil [16975 17007]) ("js2-ENUM_INIT_ARRAY" variable (:default-value 60) nil [17008 17039]) ("js2-ENUM_NEXT" variable (:default-value 61) nil [17040 17065]) ("js2-ENUM_ID" variable (:default-value 62) nil [17066 17089]) ("js2-THISFN" variable (:default-value 63) nil [17090 17112]) ("js2-RETURN_RESULT" variable (:default-value 64) nil [17113 17142]) ("js2-ARRAYLIT" variable (:default-value 65) nil [17188 17212]) ("js2-OBJECTLIT" variable (:default-value 66) nil [17235 17260]) ("js2-GET_REF" variable (:default-value 67) nil [17283 17306]) ("js2-SET_REF" variable (:default-value 68) nil [17327 17350]) ("js2-DEL_REF" variable (:default-value 69) nil [17383 17406]) ("js2-REF_CALL" variable (:default-value 70) nil [17433 17457]) ("js2-REF_SPECIAL" variable (:default-value 71) nil [17499 17526]) ("js2-YIELD" variable (:default-value 72) nil [17578 17599]) ("js2-DEFAULTNAMESPACE" variable (:default-value 73) nil [17655 17687]) ("js2-ESCXMLATTR" variable (:default-value 74) nil [17688 17714]) ("js2-ESCXMLTEXT" variable (:default-value 75) nil [17715 17741]) ("js2-REF_MEMBER" variable (:default-value 76) nil [17742 17768]) ("js2-REF_NS_MEMBER" variable (:default-value 77) nil [17805 17834]) ("js2-REF_NAME" variable (:default-value 78) nil [17875 17899]) ("js2-REF_NS_NAME" variable (:default-value 79) nil [17936 17963]) ("js2-first-bytecode" variable (:default-value js2-ENTERWITH) nil [18007 18048]) ("js2-last-bytecode" variable (:default-value js2-REF_NS_NAME) nil [18049 18091]) ("js2-TRY" variable (:default-value 80) nil [18093 18112]) ("js2-SEMI" variable (:default-value 81) nil [18113 18133]) ("js2-LB" variable (:default-value 82) nil [18156 18174]) ("js2-RB" variable (:default-value 83) nil [18213 18231]) ("js2-LC" variable (:default-value 84) nil [18232 18250]) ("js2-RC" variable (:default-value 85) nil [18293 18311]) ("js2-LP" variable (:default-value 86) nil [18312 18330]) ("js2-RP" variable (:default-value 87) nil [18367 18385]) ("js2-COMMA" variable (:default-value 88) nil [18386 18407]) ("js2-ASSIGN" variable (:default-value 89) nil [18435 18457]) ("js2-ASSIGN_BITOR" variable (:default-value 90) nil [18490 18518]) ("js2-ASSIGN_BITXOR" variable (:default-value 91) nil [18526 18555]) ("js2-ASSIGN_BITAND" variable (:default-value 92) nil [18562 18591]) ("js2-ASSIGN_LSH" variable (:default-value 93) nil [18598 18624]) ("js2-ASSIGN_RSH" variable (:default-value 94) nil [18635 18661]) ("js2-ASSIGN_URSH" variable (:default-value 95) nil [18672 18699]) ("js2-ASSIGN_ADD" variable (:default-value 96) nil [18710 18736]) ("js2-ASSIGN_SUB" variable (:default-value 97) nil [18746 18772]) ("js2-ASSIGN_MUL" variable (:default-value 98) nil [18782 18808]) ("js2-ASSIGN_DIV" variable (:default-value 99) nil [18818 18844]) ("js2-ASSIGN_MOD" variable (:default-value 100) nil [18854 18881]) ("js2-first-assign" variable (:default-value js2-ASSIGN) nil [18891 18927]) ("js2-last-assign" variable (:default-value js2-ASSIGN_MOD) nil [18928 18967]) ("js2-HOOK" variable (:default-value 101) nil [18969 18990]) ("js2-COLON" variable (:default-value 102) nil [19019 19041]) ("js2-OR" variable (:default-value 103) nil [19042 19061]) ("js2-AND" variable (:default-value 104) nil [19091 19111]) ("js2-INC" variable (:default-value 105) nil [19141 19161]) ("js2-DEC" variable (:default-value 106) nil [19202 19222]) ("js2-DOT" variable (:default-value 107) nil [19223 19243]) ("js2-FUNCTION" variable (:default-value 108) nil [19276 19301]) ("js2-EXPORT" variable (:default-value 109) nil [19326 19349]) ("js2-IMPORT" variable (:default-value 110) nil [19374 19397]) ("js2-IF" variable (:default-value 111) nil [19422 19441]) ("js2-ELSE" variable (:default-value 112) nil [19466 19487]) ("js2-SWITCH" variable (:default-value 113) nil [19512 19535]) ("js2-CASE" variable (:default-value 114) nil [19560 19581]) ("js2-DEFAULT" variable (:default-value 115) nil [19606 19630]) ("js2-WHILE" variable (:default-value 116) nil [19655 19677]) ("js2-DO" variable (:default-value 117) nil [19702 19721]) ("js2-FOR" variable (:default-value 118) nil [19746 19766]) ("js2-BREAK" variable (:default-value 119) nil [19791 19813]) ("js2-CONTINUE" variable (:default-value 120) nil [19838 19863]) ("js2-VAR" variable (:default-value 121) nil [19888 19908]) ("js2-WITH" variable (:default-value 122) nil [19933 19954]) ("js2-CATCH" variable (:default-value 123) nil [19979 20001]) ("js2-FINALLY" variable (:default-value 124) nil [20026 20050]) ("js2-VOID" variable (:default-value 125) nil [20075 20096]) ("js2-RESERVED" variable (:default-value 126) nil [20121 20146]) ("js2-EMPTY" variable (:default-value 127) nil [20173 20195]) ("js2-BLOCK" variable (:default-value 128) nil [20260 20282]) ("js2-LABEL" variable (:default-value 129) nil [20309 20331]) ("js2-TARGET" variable (:default-value 130) nil [20348 20371]) ("js2-LOOP" variable (:default-value 131) nil [20372 20393]) ("js2-EXPR_VOID" variable (:default-value 132) nil [20394 20420]) ("js2-EXPR_RESULT" variable (:default-value 133) nil [20461 20489]) ("js2-JSR" variable (:default-value 134) nil [20526 20546]) ("js2-SCRIPT" variable (:default-value 135) nil [20547 20570]) ("js2-TYPEOFNAME" variable (:default-value 136) nil [20613 20640]) ("js2-USE_STACK" variable (:default-value 137) nil [20670 20696]) ("js2-SETPROP_OP" variable (:default-value 138) nil [20697 20724]) ("js2-SETELEM_OP" variable (:default-value 139) nil [20748 20775]) ("js2-LOCAL_BLOCK" variable (:default-value 140) nil [20800 20828]) ("js2-SET_REF_OP" variable (:default-value 141) nil [20829 20856]) ("js2-DOTDOT" variable (:default-value 142) nil [20908 20931]) ("js2-COLONCOLON" variable (:default-value 143) nil [20962 20989]) ("js2-XML" variable (:default-value 144) nil [21011 21031]) ("js2-DOTQUERY" variable (:default-value 145) nil [21053 21078]) ("js2-XMLATTR" variable (:default-value 146) nil [21128 21152]) ("js2-XMLEND" variable (:default-value 147) nil [21163 21186]) ("js2-TO_OBJECT" variable (:default-value 148) nil [21213 21239]) ("js2-TO_DOUBLE" variable (:default-value 149) nil [21240 21266]) ("js2-GET" variable (:default-value 150) nil [21268 21288]) ("js2-SET" variable (:default-value 151) nil [21327 21347]) ("js2-LET" variable (:default-value 152) nil [21386 21406]) ("js2-CONST" variable (:default-value 153) nil [21445 21467]) ("js2-SETCONST" variable (:default-value 154) nil [21468 21493]) ("js2-SETCONSTVAR" variable (:default-value 155) nil [21494 21522]) ("js2-ARRAYCOMP" variable (:default-value 156) nil [21523 21549]) ("js2-LETEXPR" variable (:default-value 157) nil [21550 21574]) ("js2-WITHEXPR" variable (:default-value 158) nil [21575 21600]) ("js2-DEBUGGER" variable (:default-value 159) nil [21601 21626]) ("js2-COMMENT" variable (:default-value 160) nil [21628 21652]) ("js2-num-tokens" variable (:default-value (1+ js2-COMMENT)) nil [21674 21714]) ("js2-debug-print-trees" variable (:constant-flag t) nil [21716 21752]) ("deflocal" function (:arguments ("name" "value" "comment")) nil [21975 22103]) ("deflocal" code nil nil [22249 22380]) ("deflocal" code nil nil [22382 22456]) ("deflocal" code nil nil [22458 22546]) ("deflocal" code nil nil [22548 22645]) ("deflocal" code nil nil [22647 22716]) ("deflocal" code nil nil [22718 22788]) ("deflocal" code nil nil [22790 22856]) ("deflocal" code nil nil [22858 22932]) ("deflocal" code nil nil [22934 23054]) ("deflocal" code nil nil [23056 23134]) ("deflocal" code nil nil [23136 23216]) ("deflocal" code nil nil [23218 23297]) ("deflocal" code nil nil [23299 23428]) ("deflocal" code nil nil [23430 23504]) ("js2-parsed-errors" variable nil nil [23528 23611]) ("make-variable-buffer-local" code nil nil [23612 23659]) ("js2-parsed-warnings" variable nil nil [23661 23748]) ("make-variable-buffer-local" code nil nil [23749 23798]) ("js2-recover-from-parse-errors" variable (:default-value t) nil [23800 24212]) ("make-variable-buffer-local" code nil nil [24213 24272]) ("js2-parse-hook" variable nil nil [24274 24355]) ("make-variable-buffer-local" code nil nil [24356 24400]) ("js2-parse-finished-hook" variable nil nil [24402 24532]) ("js2-is-eval-code" variable nil nil [24534 24787]) ("make-variable-buffer-local" code nil nil [24788 24834]) ("js2-parse-ide-mode" variable (:default-value t) nil [24836 25106]) ("js2-clear-ti-mask" variable (:constant-flag t :default-value 65535) nil [25173 25250]) ("js2-ti-after-eol" variable (:constant-flag t :default-value (lsh 1 16)) nil [25252 25333]) ("js2-ti-check-label" variable (:constant-flag t :default-value (lsh 1 17)) nil [25335 25416]) ("js2-compiler-generate-debug-info" variable (:default-value t) nil [25477 25520]) ("make-variable-buffer-local" code nil nil [25521 25583]) ("js2-compiler-use-dynamic-scope" variable nil nil [25585 25628]) ("make-variable-buffer-local" code nil nil [25629 25689]) ("js2-compiler-reserved-keywords-as-identifier" variable nil nil [25691 25748]) ("make-variable-buffer-local" code nil nil [25749 25823]) ("js2-compiler-xml-available" variable (:default-value t) nil [25825 25862]) ("make-variable-buffer-local" code nil nil [25863 25919]) ("js2-compiler-optimization-level" variable nil nil [25921 25963]) ("make-variable-buffer-local" code nil nil [25964 26025]) ("js2-compiler-generating-source" variable (:default-value t) nil [26027 26068]) ("make-variable-buffer-local" code nil nil [26069 26129]) ("js2-compiler-strict-mode" variable nil nil [26131 26168]) ("make-variable-buffer-local" code nil nil [26169 26223]) ("js2-compiler-report-warning-as-error" variable nil nil [26225 26274]) ("make-variable-buffer-local" code nil nil [26275 26341]) ("js2-compiler-generate-observer-count" variable nil nil [26343 26392]) ("make-variable-buffer-local" code nil nil [26393 26459]) ("js2-compiler-activation-names" variable nil nil [26461 26503]) ("make-variable-buffer-local" code nil nil [26504 26563]) ("js2-called-by-compile-function" variable nil nil [26653 26821]) ("make-variable-buffer-local" code nil nil [26822 26882]) ("js2-current-flagged-token" variable (:default-value js2-EOF) nil [26950 26992]) ("make-variable-buffer-local" code nil nil [26993 27048]) ("js2-current-token" variable (:default-value js2-EOF) nil [27050 27084]) ("make-variable-buffer-local" code nil nil [27085 27132]) ("js2-nesting-of-function" variable nil nil [27251 27285]) ("make-variable-buffer-local" code nil nil [27286 27339]) ("js2-recorded-assignments" variable nil nil [27341 27378]) ("make-variable-buffer-local" code nil nil [27379 27435]) ("js2-current-script-or-fn" variable nil nil [27580 27617]) ("make-variable-buffer-local" code nil nil [27618 27672]) ("js2-current-scope" variable nil nil [27674 27704]) ("make-variable-buffer-local" code nil nil [27705 27752]) ("js2-nesting-of-with" variable nil nil [27754 27784]) ("make-variable-buffer-local" code nil nil [27785 27834]) ("js2-label-set" variable nil nil [27836 27905]) ("make-variable-buffer-local" code nil nil [27906 27949]) ("js2-loop-set" variable nil nil [27951 27976]) ("make-variable-buffer-local" code nil nil [27977 28019]) ("js2-loop-and-switch-set" variable nil nil [28021 28057]) ("make-variable-buffer-local" code nil nil [28058 28111]) ("js2-has-return-value" variable nil nil [28113 28146]) ("make-variable-buffer-local" code nil nil [28147 28197]) ("js2-end-flags" variable nil nil [28199 28223]) ("make-variable-buffer-local" code nil nil [28224 28267]) ("js2-prev-name-token-start" variable nil nil [28488 28526]) ("js2-prev-name-token-string" variable nil nil [28527 28566]) ("js2-save-name-token-data" function (:arguments ("pos" "name")) nil [28568 28693]) ("js2-end-unreached" variable (:constant-flag t) nil [29503 29539]) ("js2-end-drops-off" variable (:constant-flag t :default-value 1) nil [29540 29576]) ("js2-end-returns" variable (:constant-flag t :default-value 2) nil [29577 29613]) ("js2-end-returns-value" variable (:constant-flag t :default-value 4) nil [29614 29650]) ("js2-end-yields" variable (:constant-flag t :default-value 8) nil [29651 29687]) ("js2-labeled-stmt" variable nil nil [29948 29977]) ("make-variable-buffer-local" code nil nil [30010 30056]) ("js2-in-for-init" variable nil nil [30318 30346]) ("make-variable-buffer-local" code nil nil [30347 30392]) ("js2-temp-name-counter" variable nil nil [30394 30426]) ("make-variable-buffer-local" code nil nil [30427 30478]) ("js2-parse-stmt-count" variable nil nil [30480 30511]) ("make-variable-buffer-local" code nil nil [30512 30562]) ("js2-get-next-temp-name" function nil nil [30564 30646]) ("js2-parse-interruptable-p" variable (:default-value t) nil [30648 30792]) ("js2-statements-per-pause" variable (:default-value 50) nil [30794 31225]) ("js2-record-comments" variable (:default-value t) nil [31227 31329]) ("make-variable-buffer-local" code nil nil [31330 31379]) ("js2-scanned-comments" variable nil nil [31381 31463]) ("make-variable-buffer-local" code nil nil [31464 31514]) ("js2-underline-color" function (:arguments ("color")) nil [31516 31792]) ("js2-mode-indent-inhibit-undo" variable nil nil [31794 32059]) ("js2-mode-indent-ignore-first-tab" variable nil nil [32061 33071]) ("js2-indent-hook" variable nil nil [33073 34119]) ("js2-warning-face" variable (:default-value (\` ((((class color) (background light)) (:underline (\, (js2-underline-color "orange")))) (((class color) (background dark)) (:underline (\, (js2-underline-color "orange")))) (t (:underline t))))) nil [34121 34405]) ("js2-error-face" variable (:default-value (\` ((((class color) (background light)) (:foreground "red")) (((class color) (background dark)) (:foreground "red")) (t (:foreground "red"))))) nil [34407 34642]) ("js2-jsdoc-tag-face" variable (:default-value (quote ((t :foreground "SlateGray")))) nil [34644 34785]) ("js2-jsdoc-type-face" variable (:default-value (quote ((t :foreground "SteelBlue")))) nil [34787 34929]) ("js2-jsdoc-value-face" variable (:default-value (quote ((t :foreground "PeachPuff3")))) nil [34931 35071]) ("js2-function-param-face" variable (:default-value (quote ((t :foreground "SeaGreen")))) nil [35073 35219]) ("js2-instance-member-face" variable (:default-value (quote ((t :foreground "DarkOrchid")))) nil [35221 35389]) ("js2-private-member-face" variable (:default-value (quote ((t :foreground "PeachPuff3")))) nil [35391 35564]) ("js2-private-function-call-face" variable (:default-value (quote ((t :foreground "goldenrod")))) nil [35566 35747]) ("js2-jsdoc-html-tag-name-face" variable (:default-value (if js2-emacs22 (quote ((((class color) (min-colors 88) (background light)) (:foreground "rosybrown")) (((class color) (min-colors 8) (background dark)) (:foreground "yellow")) (((class color) (min-colors 8) (background light)) (:foreground "magenta")))) (quote ((((type tty pc) (class color) (background light)) (:foreground "magenta")) (((type tty pc) (class color) (background dark)) (:foreground "yellow")) (t (:foreground "RosyBrown")))))) nil [35749 36367]) ("js2-jsdoc-html-tag-delimiter-face" variable (:default-value (if js2-emacs22 (quote ((((class color) (min-colors 88) (background light)) (:foreground "dark khaki")) (((class color) (min-colors 8) (background dark)) (:foreground "green")) (((class color) (min-colors 8) (background light)) (:foreground "green")))) (quote ((((type tty pc) (class color) (background light)) (:foreground "green")) (((type tty pc) (class color) (background dark)) (:foreground "green")) (t (:foreground "dark khaki")))))) nil [36369 36994]) ("js2-external-variable-face" variable (:default-value (quote ((t :foreground "orange")))) nil [36996 37399]) ("js2-highlight-external-variables" variable (:default-value t) nil [37401 37544]) ("js2-mode-map" variable (:default-value (let ((map (make-sparse-keymap)) keys) (define-key map [mouse-1] (function js2-mode-show-node)) (define-key map "" (function js2-enter-key)) (when js2-rebind-eol-bol-keys (define-key map "" (function js2-beginning-of-line)) (define-key map "" (function js2-end-of-line))) (define-key map "" (function js2-mode-hide-element)) (define-key map "" (function js2-mode-show-element)) (define-key map "" (function js2-mode-show-all)) (define-key map "" (function js2-mode-toggle-hide-functions)) (define-key map "" (function js2-mode-toggle-hide-comments)) (define-key map "" (function js2-mode-toggle-element)) (define-key map "" (function js2-mode-toggle-warnings-and-errors)) (define-key map (kbd "C-c C-'") (function js2-next-error)) (if (setq keys (where-is-internal (function next-error))) (define-key map (car keys) (function js2-next-error))) (define-key map (or (car (where-is-internal (function mark-defun))) (kbd "M-C-h")) (function js2-mark-defun)) (define-key map (or (car (where-is-internal (function narrow-to-defun))) (kbd "C-x nd")) (function js2-narrow-to-defun)) (define-key map [down-mouse-3] (function js2-mouse-3)) (when js2-auto-indent-flag (mapc (lambda (key) (define-key map key (function js2-insert-and-indent))) js2-electric-keys)) (define-key map [menu-bar javascript] (cons "JavaScript" (make-sparse-keymap "JavaScript"))) (define-key map [menu-bar javascript customize-js2-mode] (quote (menu-item "Customize js2-mode" js2-mode-customize :help "Customize the behavior of this mode"))) (define-key map [menu-bar javascript js2-force-refresh] (quote (menu-item "Force buffer refresh" js2-mode-reset :help "Re-parse the buffer from scratch"))) (define-key map [menu-bar javascript separator-2] (quote ("--"))) (define-key map [menu-bar javascript next-error] (quote (menu-item "Next warning or error" js2-next-error :enabled (and js2-mode-ast (or (js2-ast-root-errors js2-mode-ast) (js2-ast-root-warnings js2-mode-ast))) :help "Move to next warning or error"))) (define-key map [menu-bar javascript display-errors] (quote (menu-item "Show errors and warnings" js2-mode-display-warnings-and-errors :visible (not js2-mode-show-parse-errors) :help "Turn on display of warnings and errors"))) (define-key map [menu-bar javascript hide-errors] (quote (menu-item "Hide errors and warnings" js2-mode-hide-warnings-and-errors :visible js2-mode-show-parse-errors :help "Turn off display of warnings and errors"))) (define-key map [menu-bar javascript separator-1] (quote ("--"))) (define-key map [menu-bar javascript js2-toggle-function] (quote (menu-item "Show/collapse element" js2-mode-toggle-element :help "Hide or show function body or comment"))) (define-key map [menu-bar javascript show-comments] (quote (menu-item "Show block comments" js2-mode-toggle-hide-comments :visible js2-mode-comments-hidden :help "Expand all hidden block comments"))) (define-key map [menu-bar javascript hide-comments] (quote (menu-item "Hide block comments" js2-mode-toggle-hide-comments :visible (not js2-mode-comments-hidden) :help "Show block comments as /*...*/"))) (define-key map [menu-bar javascript show-all-functions] (quote (menu-item "Show function bodies" js2-mode-toggle-hide-functions :visible js2-mode-functions-hidden :help "Expand all hidden function bodies"))) (define-key map [menu-bar javascript hide-all-functions] (quote (menu-item "Hide function bodies" js2-mode-toggle-hide-functions :visible (not js2-mode-functions-hidden) :help "Show {...} for all top-level function bodies"))) map)) nil [37546 41691]) ("js2-mode-identifier-re" variable (:constant-flag t :default-value "[a-zA-Z_$][a-zA-Z0-9_$]*") nil [41693 41753]) ("js2-mode-//-comment-re" variable (:default-value "^\\(\\s-*\\)//.+") nil [41755 41920]) ("js2-mode-ast" variable nil nil [41922 41967]) ("make-variable-buffer-local" code nil nil [41968 42010]) ("js2-mode-hook" variable nil nil [42012 42038]) ("js2-mode-parse-timer" variable nil nil [42040 42093]) ("make-variable-buffer-local" code nil nil [42094 42144]) ("js2-mode-buffer-dirty-p" variable nil nil [42146 42202]) ("make-variable-buffer-local" code nil nil [42203 42256]) ("js2-mode-parsing" variable nil nil [42258 42307]) ("make-variable-buffer-local" code nil nil [42308 42354]) ("js2-mode-node-overlay" variable nil nil [42356 42390]) ("make-variable-buffer-local" code nil nil [42391 42442]) ("js2-mode-show-overlay" variable (:default-value js2-mode-dev-mode-p) nil [42444 42552]) ("js2-mode-fontifications" variable nil nil [42554 42609]) ("make-variable-buffer-local" code nil nil [42610 42663]) ("js2-mode-deferred-properties" variable nil nil [42665 42725]) ("make-variable-buffer-local" code nil nil [42726 42784]) ("js2-imenu-recorder" variable nil nil [42786 42836]) ("make-variable-buffer-local" code nil nil [42837 42885]) ("js2-imenu-function-map" variable nil nil [42887 42941]) ("make-variable-buffer-local" code nil nil [42942 42994]) ("js2-paragraph-start" variable (:default-value "\\(@[a-zA-Z]+\\>\\|$\\)") nil [42996 43052]) ("js2-syntactic-ws-start" variable (:default-value "\\s \\|/[*/]\\|[
]\\|\\\\[
]\\|\\s!\\|<!--\\|^\\s-*-->") nil [43186 43282]) ("js2-syntactic-ws-end" variable (:default-value "\\s \\|[
/]\\|\\s!") nil [43284 43339]) ("js2-syntactic-eol" variable (:default-value (concat "\\s *\\(/\\*[^*
]*" "\\(\\*+[^*
/][^*
]*\\)*" "\\*+/\\s *\\)*" "\\(//\\|/\\*[^*
]*" "\\(\\*+[^*
/][^*
]*\\)*$" "\\|\\\\$\\|$\\)")) nil [43341 43641]) ("js2-comment-prefix-regexp" variable (:default-value "//+\\|\\**") nil [43643 43692]) ("js2-comment-start-skip" variable (:default-value "\\(//+\\|/\\*+\\)\\s *") nil [43694 43752]) ("js2-mode-verbose-parse-p" variable (:default-value js2-mode-dev-mode-p) nil [43754 43859]) ("js2-mode-functions-hidden" variable nil nil [43861 43918]) ("js2-mode-comments-hidden" variable nil nil [43919 43975]) ("js2-mode-syntax-table" variable (:default-value (let ((table (make-syntax-table))) (c-populate-syntax-table table) table)) nil [43977 44134]) ("js2-mode-abbrev-table" variable nil nil [44136 44217]) ("define-abbrev-table" code nil nil [44218 44265]) ("js2-mode-must-byte-compile" variable (:default-value (not js2-mode-dev-mode-p)) nil [44267 44397]) ("js2-mode-pending-parse-callbacks" variable nil nil [44399 44513]) ("js2-mode-last-indented-line" variable (:default-value -1) nil [44515 44554]) ("c-paragraph-start" variable nil nil [44577 44607]) ("c-paragraph-separate" variable nil nil [44610 44643]) ("c-syntactic-ws-start" variable nil nil [44646 44679]) ("c-syntactic-ws-end" variable nil nil [44682 44713]) ("c-syntactic-eol" variable nil nil [44716 44744]) ("running-xemacs" variable nil nil [44747 44774]) ("font-lock-mode" variable nil nil [44777 44804]) ("font-lock-keywords" variable nil nil [44807 44838]) ("if" code nil nil [44862 44942]) ("js2-vars" package nil nil [44945 44964]) ("cl" include nil nil [45148 45161]) ("unless" code nil nil [45242 46476]) ("unless" code nil nil [46478 46940]) ("unless" code nil nil [46942 48094]) ("js2-delete-if" function (:arguments ("predicate" "list")) nil [48204 48382]) ("js2-position" function (:arguments ("element" "list")) nil [48384 48748]) ("js2-find-if" function (:arguments ("predicate" "list")) nil [48750 49006]) ("js2-time" function (:arguments ("form")) nil [49033 49435]) ("def-edebug-spec" code nil nil [49437 49465]) ("neq" function (:arguments ("expr1" "expr2")) nil [49467 49555]) ("js2-same-line" function (:arguments ("pos")) nil [49557 49708]) ("js2-same-line-2" function (:arguments ("p1" "p2")) nil [49710 49851]) ("js2-code-bug" function nil nil [49853 49968]) ("js2-record-parse-error" function (:arguments ("msg" "&optional" "arg" "pos" "len")) nil [50098 50308]) ("js2-report-error" function (:arguments ("msg" "&optional" "msg-arg" "pos" "len")) nil [50310 50731]) ("js2-report-warning" function (:arguments ("msg" "&optional" "msg-arg" "pos" "len")) nil [50733 51046]) ("js2-add-strict-warning" function (:arguments ("msg-id" "&optional" "msg-arg" "beg" "end")) nil [51048 51246]) ("put" code nil nil [51248 51333]) ("put" code nil nil [51334 51387]) ("put" code nil nil [51389 51471]) ("put" code nil nil [51472 51523]) ("js2-clear-flag" function (:arguments ("flags" "flag")) nil [51525 51611]) ("js2-set-flag" function (:arguments ("flags" "flag")) nil [51613 51720]) ("js2-flag-set-p" function (:arguments ("flags" "flag")) nil [51722 51789]) ("js2-flag-not-set-p" function (:arguments ("flags" "flag")) nil [51791 51863]) ("js2-with-unmodifying-text-property-changes" function (:arguments ("&rest" "body")) nil [51917 52579]) ("put" code nil nil [52581 52654]) ("def-edebug-spec" code nil nil [52655 52717]) ("js2-with-underscore-as-word-syntax" function (:arguments ("&rest" "body")) nil [52719 53125]) ("put" code nil nil [53127 53192]) ("def-edebug-spec" code nil nil [53193 53247]) ("with-buffer" function (:arguments ("buf" "form")) nil [53249 53575]) ("char-is-uppercase" function (:arguments ("c")) nil [53577 53718]) ("char-is-lowercase" function (:arguments ("c")) nil [53720 53859]) ("put" code nil nil [53861 53903]) ("def-edebug-spec" code nil nil [53904 53935]) ("js2-util" package nil nil [53937 53956]) ("cl" include nil nil [54260 54273]) ("js2-tokens" variable nil nil [54276 54336]) ("js2-token-names" variable (:default-value (let* ((names (make-vector js2-num-tokens -1)) (case-fold-search nil) (syms (apropos-internal "^js2-\\(?:[A-Z_]+\\)"))) (loop for sym in syms for i from 0 do (unless (or (memq sym (quote (js2-EOF_CHAR js2-ERROR))) (not (boundp sym))) (aset names (symbol-value sym) (substring (symbol-name sym) 4)) (push sym js2-tokens))) names)) nil [54358 54972]) ("js2-token-name" function (:arguments ("tok")) nil [54974 55415]) ("js2-token-sym" function (:arguments ("tok")) nil [55417 55547]) ("js2-token-codes" variable (:default-value (let ((table (make-hash-table :test (quote eq) :size 256))) (loop for name across js2-token-names for sym = (intern (concat "js2-" name)) do (puthash sym (symbol-value sym) table)) (puthash (quote js2-DELETE) js2-DELPROP table) table)) nil [55549 55956]) ("js2-token-code" function (:arguments ("sym")) nil [55958 56131]) ("js2-report-scan-error" function (:arguments ("msg" "&optional" "no-throw" "beg" "len")) nil [56152 56437]) ("js2-get-string-from-buffer" function nil nil [56439 56666]) ("js2-add-to-string" function (:arguments ("c")) nil [56770 56834]) ("js2-unget-char" function nil nil [57110 57161]) ("js2-get-char" function nil nil [57293 58142]) ("js2-read-unicode-escape" function nil nil [58144 58915]) ("js2-match-char" function (:arguments ("test")) nil [58917 59181]) ("js2-peek-char" function nil nil [59183 59262]) ("js2-java-identifier-start-p" function (:arguments ("c")) nil [59264 59384]) ("js2-java-identifier-part-p" function (:arguments ("c")) nil [59386 59658]) ("js2-alpha-p" function (:arguments ("c")) nil [59660 59777]) ("js2-digit-p" function (:arguments ("c")) nil [59779 59833]) ("js2-js-space-p" function (:arguments ("c")) nil [59835 60020]) ("js2-skip-line" function nil nil [60022 60232]) ("js2-init-scanner" function (:arguments ("&optional" "buf" "line")) nil [60234 61097]) ("js2-token-to-string" function (:arguments ("token")) nil [61290 61692]) ("js2-keywords" variable (:constant-flag t :default-value (quote (break case catch const continue debugger default delete do else enum false finally for function if in instanceof import let new null return switch this throw true try typeof var void while with yield))) nil [61694 61974]) ("js2-kwd-tokens" variable (:constant-flag t :default-value (let ((table (make-vector js2-num-tokens nil)) (tokens (list js2-BREAK js2-CASE js2-CATCH js2-CONST js2-CONTINUE js2-DEBUGGER js2-DEFAULT js2-DELPROP js2-DO js2-ELSE js2-FALSE js2-FINALLY js2-FOR js2-FUNCTION js2-IF js2-IN js2-INSTANCEOF js2-IMPORT js2-LET js2-NEW js2-NULL js2-RETURN js2-SWITCH js2-THIS js2-THROW js2-TRUE js2-TRY js2-TYPEOF js2-VAR js2-WHILE js2-WITH js2-YIELD))) (dolist (i tokens) (aset table i (quote font-lock-keyword-face))) (aset table js2-STRING (quote font-lock-string-face)) (aset table js2-REGEXP (quote font-lock-string-face)) (aset table js2-COMMENT (quote font-lock-comment-face)) (aset table js2-THIS (quote font-lock-builtin-face)) (aset table js2-VOID (quote font-lock-constant-face)) (aset table js2-NULL (quote font-lock-constant-face)) (aset table js2-TRUE (quote font-lock-constant-face)) (aset table js2-FALSE (quote font-lock-constant-face)) table)) nil [62108 63353]) ("js2-reserved-words" variable (:constant-flag t :default-value (quote (abstract boolean byte char class double enum extends final float goto implements int interface long native package private protected public short static super synchronized throws transient volatile))) nil [63355 63639]) ("js2-keyword-names" variable (:constant-flag t :default-value (let ((table (make-hash-table :test (quote equal)))) (loop for k in js2-keywords do (puthash (symbol-name k) (intern (concat "js2-" (upcase (symbol-name k)))) table)) table)) nil [63641 64043]) ("js2-reserved-word-names" variable (:constant-flag t :default-value (let ((table (make-hash-table :test (quote equal)))) (loop for k in js2-reserved-words do (puthash (symbol-name k) (quote js2-RESERVED) table)) table)) nil [64045 64310]) ("js2-collect-string" function (:arguments ("buf")) nil [64312 64576]) ("js2-string-to-keyword" function (:arguments ("s")) nil [64578 64829]) ("js2-ts-set-char-token-bounds" function nil nil [64831 64994]) ("js2-ts-return" function (:arguments ("token")) nil [64996 65180]) ("js2-x-digit-to-int" function (:arguments ("c" "accumulator")) nil [65182 65794]) ("js2-get-token" function nil nil [65796 83280]) ("js2-read-regexp" function (:arguments ("start-token")) nil [83282 85124]) ("js2-get-first-xml-token" function nil nil [85126 85318]) ("js2-xml-discard-string" function nil nil [85320 85530]) ("js2-get-next-xml-token" function nil nil [85532 90550]) ("js2-read-quoted-string" function (:arguments ("quote")) nil [90552 90839]) ("js2-read-xml-comment" function nil nil [90841 91444]) ("js2-read-cdata" function nil nil [91446 92045]) ("js2-read-entity" function nil nil [92047 92424]) ("js2-read-PI" function nil nil [92426 92807]) ("js2-scanner-get-line" function nil nil [92809 92937]) ("js2-scan" package nil nil [92939 92958]) ("js2-message-table" variable (:default-value (make-hash-table :test (quote equal) :size 250)) nil [93430 93545]) ("js2-msg" function (:arguments ("key" "&rest" "strings")) nil [93599 93714]) ("js2-get-msg" function (:arguments ("msg-key")) nil [93716 94105]) ("js2-msg" code nil nil [94137 94204]) ("js2-msg" code nil nil [94206 94287]) ("js2-msg" code nil nil [94289 94384]) ("js2-msg" code nil nil [94386 94499]) ("js2-msg" code nil nil [94501 94611]) ("js2-msg" code nil nil [94624 94697]) ("js2-msg" code nil nil [94699 94761]) ("js2-msg" code nil nil [94781 95026]) ("js2-msg" code nil nil [95028 95242]) ("js2-msg" code nil nil [95244 95327]) ("js2-msg" code nil nil [95329 95413]) ("js2-msg" code nil nil [95415 95504]) ("js2-msg" code nil nil [95506 95603]) ("js2-msg" code nil nil [95605 95692]) ("js2-msg" code nil nil [95694 95768]) ("js2-msg" code nil nil [95784 95865]) ("js2-msg" code nil nil [95867 95947]) ("js2-msg" code nil nil [95949 96093]) ("js2-msg" code nil nil [96095 96162]) ("js2-msg" code nil nil [96164 96241]) ("js2-msg" code nil nil [96243 96306]) ("js2-msg" code nil nil [96308 96370]) ("js2-msg" code nil nil [96372 96437]) ("js2-msg" code nil nil [96439 96525]) ("js2-msg" code nil nil [96543 96687]) ("js2-msg" code nil nil [96689 96879]) ("js2-msg" code nil nil [96881 97037]) ("js2-msg" code nil nil [97039 97123]) ("js2-msg" code nil nil [97139 97229]) ("js2-msg" code nil nil [97231 97305]) ("js2-msg" code nil nil [97325 97424]) ("js2-msg" code nil nil [97426 97528]) ("js2-msg" code nil nil [97546 97612]) ("js2-msg" code nil nil [97630 97681]) ("js2-msg" code nil nil [97683 97751]) ("js2-msg" code nil nil [97753 97810]) ("js2-msg" code nil nil [97812 97869]) ("js2-msg" code nil nil [97871 97920]) ("js2-msg" code nil nil [97922 97981]) ("js2-msg" code nil nil [97983 98042]) ("js2-msg" code nil nil [98044 98106]) ("js2-msg" code nil nil [98108 98172]) ("js2-msg" code nil nil [98174 98237]) ("js2-msg" code nil nil [98239 98309]) ("js2-msg" code nil nil [98311 98390]) ("js2-msg" code nil nil [98392 98460]) ("js2-msg" code nil nil [98462 98549]) ("js2-msg" code nil nil [98551 98713]) ("js2-msg" code nil nil [98725 98808]) ("js2-msg" code nil nil [98810 98883]) ("js2-msg" code nil nil [98885 98962]) ("js2-msg" code nil nil [98964 99042]) ("js2-msg" code nil nil [99044 99131]) ("js2-msg" code nil nil [99133 99210]) ("js2-msg" code nil nil [99212 99315]) ("js2-msg" code nil nil [99336 99389]) ("js2-msg" code nil nil [99391 99445]) ("js2-msg" code nil nil [99447 99530]) ("js2-msg" code nil nil [99532 99604]) ("js2-msg" code nil nil [99606 99702]) ("js2-msg" code nil nil [99704 99835]) ("js2-msg" code nil nil [99837 99916]) ("js2-msg" code nil nil [99918 99977]) ("js2-msg" code nil nil [99979 100060]) ("js2-msg" code nil nil [100062 100135]) ("js2-msg" code nil nil [100137 100213]) ("js2-msg" code nil nil [100215 100282]) ("js2-msg" code nil nil [100284 100356]) ("js2-msg" code nil nil [100358 100424]) ("js2-msg" code nil nil [100426 100491]) ("js2-msg" code nil nil [100493 100567]) ("js2-msg" code nil nil [100569 100651]) ("js2-msg" code nil nil [100653 100731]) ("js2-msg" code nil nil [100733 100803]) ("js2-msg" code nil nil [100805 100878]) ("js2-msg" code nil nil [100880 100957]) ("js2-msg" code nil nil [100959 101041]) ("js2-msg" code nil nil [101043 101116]) ("js2-msg" code nil nil [101118 101180]) ("js2-msg" code nil nil [101182 101254]) ("js2-msg" code nil nil [101256 101349]) ("js2-msg" code nil nil [101351 101422]) ("js2-msg" code nil nil [101424 101483]) ("js2-msg" code nil nil [101485 101560]) ("js2-msg" code nil nil [101562 101640]) ("js2-msg" code nil nil [101642 101707]) ("js2-msg" code nil nil [101709 101786]) ("js2-msg" code nil nil [101788 101867]) ("js2-msg" code nil nil [101869 101953]) ("js2-msg" code nil nil [101955 102020]) ("js2-msg" code nil nil [102022 102091]) ("js2-msg" code nil nil [102093 102162]) ("js2-msg" code nil nil [102164 102216]) ("js2-msg" code nil nil [102218 102291]) ("js2-msg" code nil nil [102293 102343]) ("js2-msg" code nil nil [102345 102401]) ("js2-msg" code nil nil [102403 102474]) ("js2-msg" code nil nil [102476 102552]) ("js2-msg" code nil nil [102554 102623]) ("js2-msg" code nil nil [102625 102695]) ("js2-msg" code nil nil [102697 102752]) ("js2-msg" code nil nil [102754 102822]) ("js2-msg" code nil nil [102824 102894]) ("js2-msg" code nil nil [102896 102958]) ("js2-msg" code nil nil [102960 103028]) ("js2-msg" code nil nil [103030 103110]) ("js2-msg" code nil nil [103112 103182]) ("js2-msg" code nil nil [103184 103293]) ("js2-msg" code nil nil [103295 103363]) ("js2-msg" code nil nil [103365 103447]) ("js2-msg" code nil nil [103449 103530]) ("js2-msg" code nil nil [103532 103617]) ("js2-msg" code nil nil [103619 103716]) ("js2-msg" code nil nil [103718 103817]) ("js2-msg" code nil nil [103819 103914]) ("js2-msg" code nil nil [103916 104021]) ("js2-msg" code nil nil [104023 104069]) ("js2-msg" code nil nil [104071 104135]) ("js2-msg" code nil nil [104137 104204]) ("js2-msg" code nil nil [104206 104276]) ("js2-msg" code nil nil [104278 104363]) ("js2-msg" code nil nil [104365 104432]) ("js2-msg" code nil nil [104434 104543]) ("js2-msg" code nil nil [104545 104649]) ("js2-msg" code nil nil [104651 104808]) ("js2-msg" code nil nil [104810 104877]) ("js2-msg" code nil nil [104879 104968]) ("js2-msg" code nil nil [104987 105049]) ("js2-msg" code nil nil [105051 105117]) ("js2-msg" code nil nil [105119 105204]) ("js2-msg" code nil nil [105206 105288]) ("js2-msg" code nil nil [105290 105372]) ("js2-msg" code nil nil [105374 105438]) ("js2-msg" code nil nil [105440 105515]) ("js2-msg" code nil nil [105517 105603]) ("js2-msg" code nil nil [105605 105709]) ("js2-msg" code nil nil [105711 105786]) ("js2-msg" code nil nil [105788 105869]) ("js2-msg" code nil nil [105871 105939]) ("js2-msg" code nil nil [105941 106003]) ("js2-msg" code nil nil [106005 106081]) ("js2-msg" code nil nil [106083 106165]) ("js2-msg" code nil nil [106167 106245]) ("js2-msg" code nil nil [106247 106321]) ("js2-msg" code nil nil [106323 106386]) ("js2-msg" code nil nil [106388 106460]) ("js2-msg" code nil nil [106462 106589]) ("js2-msg" code nil nil [106591 106661]) ("js2-msg" code nil nil [106663 106749]) ("js2-msg" code nil nil [106751 106818]) ("js2-msg" code nil nil [106820 106907]) ("js2-msg" code nil nil [106909 107001]) ("js2-msg" code nil nil [107003 107165]) ("js2-msg" code nil nil [107167 107265]) ("js2-msg" code nil nil [107267 107353]) ("js2-msg" code nil nil [107355 107451]) ("js2-msg" code nil nil [107453 107507]) ("js2-msg" code nil nil [107529 107607]) ("js2-msg" code nil nil [107609 107713]) ("js2-msg" code nil nil [107715 107867]) ("js2-msg" code nil nil [107869 107977]) ("js2-msg" code nil nil [107979 108141]) ("js2-msg" code nil nil [108143 108275]) ("js2-msg" code nil nil [108277 108377]) ("js2-msg" code nil nil [108379 108457]) ("js2-msg" code nil nil [108459 108585]) ("js2-msg" code nil nil [108587 108667]) ("js2-msg" code nil nil [108669 108775]) ("js2-msg" code nil nil [108777 108866]) ("js2-msg" code nil nil [108868 108958]) ("js2-msg" code nil nil [108960 109043]) ("js2-msg" code nil nil [109045 109136]) ("js2-msg" code nil nil [109138 109227]) ("js2-msg" code nil nil [109229 109308]) ("js2-msg" code nil nil [109325 109385]) ("js2-msg" code nil nil [109387 109444]) ("js2-msg" code nil nil [109446 109524]) ("js2-msg" code nil nil [109526 109594]) ("js2-msg" code nil nil [109596 109682]) ("js2-msg" code nil nil [109684 109764]) ("js2-msg" code nil nil [109766 109824]) ("js2-msg" code nil nil [109826 109888]) ("js2-msg" code nil nil [109890 109963]) ("js2-msg" code nil nil [109965 110105]) ("js2-msg" code nil nil [110132 110255]) ("js2-msg" code nil nil [110257 110396]) ("js2-msg" code nil nil [110398 110487]) ("js2-msg" code nil nil [110499 110569]) ("js2-msg" code nil nil [110581 110677]) ("js2-msg" code nil nil [110686 110744]) ("js2-msg" code nil nil [110756 110823]) ("js2-msg" code nil nil [110844 110926]) ("js2-msg" code nil nil [110928 110999]) ("js2-msg" code nil nil [111001 111106]) ("js2-msg" code nil nil [111123 111192]) ("js2-messages" package nil nil [111194 111217]) ("cl" include nil nil [111393 111406]) ("js2-property-flag" variable (:default-value 1) nil [111479 111553]) ("js2-attribute-flag" variable (:default-value 2) nil [111554 111603]) ("js2-descendants-flag" variable (:default-value 4) nil [111604 111653]) ("js2-relpos" function (:arguments ("pos" "anchor")) nil [111655 111786]) ("js2-make-pad" function (:arguments ("indent")) nil [111788 111900]) ("js2-visit-ast" function (:arguments ("node" "callback")) nil [111902 113239]) ("js2-node" type (:members ("type" "pos" "len" "props" "parent") :type "struct") nil [113241 113532]) ("js2-node-get-prop" function (:arguments ("node" "prop" "&optional" "default")) nil [113574 113689]) ("js2-node-set-prop" function (:arguments ("node" "prop" "value")) nil [113691 113823]) ("js2-fixup-starts" function (:arguments ("n" "nodes")) nil [113825 114122]) ("js2-node-add-children" function (:arguments ("parent" "&rest" "nodes")) nil [114124 114466]) ("js2-node-abs-pos" function (:arguments ("n")) nil [114534 114689]) ("js2-node-abs-end" function (:arguments ("n")) nil [114691 114815]) ("js2-block-node" type (:members ("kids") :type "struct") nil [115059 115498]) ("put" code nil nil [115544 115605]) ("put" code nil nil [115606 115667]) ("js2-visit-block" function (:arguments ("ast" "callback")) nil [115669 115834]) ("js2-print-block" function (:arguments ("n" "i")) nil [115836 116018]) ("js2-scope" type (:members ("symbol-table" "parent-scope" "top") :type "struct") nil [116020 116827]) ("put" code nil nil [116880 116935]) ("put" code nil nil [116936 116991]) ("js2-scope-set-parent-scope" function (:arguments ("scope" "parent")) nil [116993 117233]) ("js2-node-get-enclosing-scope" function (:arguments ("node")) nil [117235 117524]) ("js2-get-defining-scope" function (:arguments ("scope" "name")) nil [117526 118096]) ("js2-scope-get-symbol" function (:arguments ("scope" "name")) nil [118098 118458]) ("js2-scope-put-symbol" function (:arguments ("scope" "name" "symbol")) nil [118460 118889]) ("js2-symbol" type (:members ("decl-type" "name" "ast-node") :type "struct") nil [118891 119178]) ("js2-error-node" type (:type "struct") nil [119195 119558]) ("put" code nil nil [119560 119620]) ("put" code nil nil [119621 119681]) ("js2-script-node" type (:members ("functions" "regexps" "symbols" "param-count" "var-names" "consts" "temp-number") :type "struct") nil [119683 120374]) ("put" code nil nil [120409 120471]) ("put" code nil nil [120472 120535]) ("js2-print-script" function (:arguments ("node" "indent")) nil [120537 120650]) ("js2-ast-root" type (:members ("buffer" "comments" "errors" "warnings" "node-count") :type "struct") nil [120652 121308]) ("put" code nil nil [121363 121425]) ("put" code nil nil [121426 121486]) ("js2-visit-ast-root" function (:arguments ("ast" "callback")) nil [121488 121689]) ("js2-comment-node" type (:members ("format") :type "struct") nil [121691 122083]) ("put" code nil nil [122119 122181]) ("put" code nil nil [122182 122247]) ("js2-print-comment" function (:arguments ("n" "i")) nil [122249 122461]) ("js2-expr-stmt-node" type (:members ("expr") :type "struct") nil [122463 122870]) ("js2-expr-stmt-node-set-has-result" function (:arguments ("node")) nil [122872 123043]) ("put" code nil nil [123045 123119]) ("put" code nil nil [123120 123194]) ("js2-visit-expr-stmt-node" function (:arguments ("n" "v")) nil [123196 123282]) ("js2-print-expr-stmt-node" function (:arguments ("n" "indent")) nil [123284 123397]) ("js2-loop-node" type (:members ("body" "lp" "rp") :type "struct") nil [123399 123619]) ("js2-do-node" type (:members ("condition" "while-pos") :type "struct") nil [123669 124297]) ("put" code nil nil [124336 124396]) ("put" code nil nil [124397 124457]) ("js2-visit-do-node" function (:arguments ("n" "v")) nil [124459 124577]) ("js2-print-do-node" function (:arguments ("n" "i")) nil [124579 124861]) ("js2-while-node" type (:members ("condition") :type "struct") nil [124863 125428]) ("put" code nil nil [125451 125517]) ("put" code nil nil [125518 125584]) ("js2-visit-while-node" function (:arguments ("n" "v")) nil [125586 125713]) ("js2-print-while-node" function (:arguments ("n" "i")) nil [125715 125956]) ("js2-for-node" type (:members ("init" "condition" "update") :type "struct") nil [125958 126693]) ("put" code nil nil [126714 126776]) ("put" code nil nil [126777 126839]) ("js2-visit-for-node" function (:arguments ("n" "v")) nil [126841 127048]) ("js2-print-for-node" function (:arguments ("n" "i")) nil [127050 127409]) ("js2-for-in-node" type (:members ("iterator" "object" "in-pos" "each-pos" "foreach-p") :type "struct") nil [127411 128417]) ("put" code nil nil [128447 128515]) ("put" code nil nil [128516 128584]) ("js2-visit-for-in-node" function (:arguments ("n" "v")) nil [128586 128762]) ("js2-print-for-in-node" function (:arguments ("n" "i")) nil [128764 129180]) ("js2-return-node" type (:members ("retval") :type "struct") nil [129182 129583]) ("put" code nil nil [129624 129692]) ("put" code nil nil [129693 129761]) ("js2-visit-return-node" function (:arguments ("n" "v")) nil [129763 129883]) ("js2-print-return-node" function (:arguments ("n" "i")) nil [129885 130076]) ("js2-if-node" type (:members ("condition" "then-part" "else-pos" "else-part" "lp" "rp") :type "struct") nil [130078 130951]) ("put" code nil nil [131003 131063]) ("put" code nil nil [131064 131124]) ("js2-visit-if-node" function (:arguments ("n" "v")) nil [131126 131332]) ("js2-print-if-node" function (:arguments ("n" "i")) nil [131334 131889]) ("js2-try-node" type (:members ("try-block" "catch-clauses" "finally-block") :type "struct") nil [131891 132472]) ("put" code nil nil [132497 132559]) ("put" code nil nil [132560 132622]) ("js2-visit-try-node" function (:arguments ("n" "v")) nil [132624 132876]) ("js2-print-try-node" function (:arguments ("n" "i")) nil [132878 133297]) ("js2-catch-node" type (:members ("var-name" "guard-kwd" "guard-expr" "block" "lp" "rp") :type "struct") nil [133299 134241]) ("put" code nil nil [134300 134366]) ("put" code nil nil [134367 134433]) ("js2-visit-catch-node" function (:arguments ("n" "v")) nil [134435 134652]) ("js2-print-catch-node" function (:arguments ("n" "i")) nil [134654 135068]) ("js2-finally-node" type (:members ("body") :type "struct") nil [135070 135471]) ("put" code nil nil [135524 135594]) ("put" code nil nil [135595 135665]) ("js2-visit-finally-node" function (:arguments ("n" "v")) nil [135667 135749]) ("js2-print-finally-node" function (:arguments ("n" "i")) nil [135751 135925]) ("js2-switch-node" type (:members ("discriminant" "cases" "lp" "rp") :type "struct") nil [135927 136661]) ("put" code nil nil [136725 136793]) ("put" code nil nil [136794 136862]) ("js2-visit-switch-node" function (:arguments ("n" "v")) nil [136864 137017]) ("js2-print-switch-node" function (:arguments ("n" "i")) nil [137019 137311]) ("js2-case-node" type (:members ("expr") :type "struct") nil [137313 137777]) ("put" code nil nil [137821 137885]) ("put" code nil nil [137886 137950]) ("js2-visit-case-node" function (:arguments ("n" "v")) nil [137952 138111]) ("js2-print-case-node" function (:arguments ("n" "i")) nil [138113 138433]) ("js2-throw-node" type (:members ("expr") :type "struct") nil [138435 138825]) ("put" code nil nil [138855 138921]) ("put" code nil nil [138922 138988]) ("js2-visit-throw-node" function (:arguments ("n" "v")) nil [138990 139068]) ("js2-print-throw-node" function (:arguments ("n" "i")) nil [139070 139202]) ("js2-with-node" type (:members ("object" "body" "lp" "rp") :type "struct") nil [139204 139837]) ("put" code nil nil [139904 139968]) ("put" code nil nil [139969 140033]) ("js2-visit-with-node" function (:arguments ("n" "v")) nil [140035 140156]) ("js2-print-with-node" function (:arguments ("n" "i")) nil [140158 140392]) ("js2-label-node" type (:members ("name" "loop") :type "struct") nil [140394 140818]) ("put" code nil nil [140876 140936]) ("put" code nil nil [140937 140998]) ("js2-print-label" function (:arguments ("n" "i")) nil [141000 141107]) ("js2-labeled-stmt-node" type (:members ("labels" "stmt") :type "struct") nil [141109 141880]) ("put" code nil nil [141921 141996]) ("put" code nil nil [141997 142072]) ("js2-get-label-by-name" function (:arguments ("lbl-stmt" "name")) nil [142074 142511]) ("js2-visit-labeled-stmt" function (:arguments ("n" "v")) nil [142513 142680]) ("js2-print-labeled-stmt" function (:arguments ("n" "i")) nil [142682 142854]) ("js2-labeled-stmt-node-contains" function (:arguments ("node" "label")) nil [142856 143168]) ("js2-labeled-stmt-node-add-label" function (:arguments ("node" "label")) nil [143170 143399]) ("js2-jump-node" type (:members ("label" "target") :type "struct") nil [143401 143625]) ("js2-visit-jump-node" function (:arguments ("n" "v")) nil [143677 143844]) ("js2-break-node" type (:type "struct") nil [143846 144518]) ("put" code nil nil [144520 144585]) ("put" code nil nil [144586 144652]) ("js2-print-break-node" function (:arguments ("n" "i")) nil [144654 144839]) ("js2-continue-node" type (:type "struct") nil [144841 145523]) ("put" code nil nil [145525 145593]) ("put" code nil nil [145594 145666]) ("js2-print-continue-node" function (:arguments ("n" "i")) nil [145668 145865]) ("js2-function-node" type (:members ("ftype" "form" "name" "params" "body" "lp" "rp" "ignore-dynamic" "needs-activation" "is-generator" "member-expr") :type "struct") nil [145867 147539]) ("put" code nil nil [147585 147657]) ("put" code nil nil [147658 147730]) ("js2-visit-function-node" function (:arguments ("n" "v")) nil [147732 147969]) ("js2-print-function-node" function (:arguments ("n" "i")) nil [147971 148835]) ("js2-function-name" function (:arguments ("node")) nil [148837 149047]) ("js2-var-decl-node" type (:members ("kids" "decl-type") :type "struct") nil [149406 150176]) ("put" code nil nil [150211 150278]) ("put" code nil nil [150279 150346]) ("js2-visit-var-decl" function (:arguments ("n" "v")) nil [150348 150450]) ("js2-print-var-decl" function (:arguments ("n" "i")) nil [150452 151052]) ("js2-var-init-node" type (:members ("target" "initializer") :type "struct") nil [151054 151663]) ("put" code nil nil [151705 151777]) ("put" code nil nil [151778 151850]) ("js2-visit-var-init-node" function (:arguments ("n" "v")) nil [151852 152037]) ("js2-print-var-init-node" function (:arguments ("n" "i")) nil [152039 152312]) ("js2-cond-node" type (:members ("test-expr" "true-expr" "false-expr" "q-pos" "c-pos") :type "struct") nil [152314 153013]) ("put" code nil nil [153039 153103]) ("put" code nil nil [153104 153168]) ("js2-visit-cond-node" function (:arguments ("n" "v")) nil [153170 153348]) ("js2-print-cond-node" function (:arguments ("n" "i")) nil [153350 153622]) ("js2-infix-node" type (:members ("op-pos" "left" "right") :type "struct") nil [153624 154319]) ("put" code nil nil [154341 154407]) ("put" code nil nil [154408 154474]) ("js2-visit-infix-node" function (:arguments ("n" "v")) nil [154476 154670]) ("js2-operator-tokens" variable (:constant-flag t :default-value (let ((table (make-hash-table :test (quote eq))) (tokens (list (cons js2-IN "in") (cons js2-TYPEOF "typeof") (cons js2-INSTANCEOF "instanceof") (cons js2-DELPROP "delete") (cons js2-COMMA ",") (cons js2-COLON ":") (cons js2-OR "||") (cons js2-AND "&&") (cons js2-INC "++") (cons js2-DEC "--") (cons js2-BITOR "|") (cons js2-BITXOR "^") (cons js2-BITAND "&") (cons js2-EQ "==") (cons js2-NE "!=") (cons js2-LT "<") (cons js2-LE "<=") (cons js2-GT ">") (cons js2-GE ">=") (cons js2-LSH "<<") (cons js2-RSH ">>") (cons js2-URSH ">>>") (cons js2-ADD "+") (cons js2-SUB "-") (cons js2-MUL "*") (cons js2-DIV "/") (cons js2-MOD "%") (cons js2-NOT "!") (cons js2-BITNOT "~") (cons js2-POS "+") (cons js2-NEG "-") (cons js2-SHEQ "===") (cons js2-SHNE "!==") (cons js2-ASSIGN "=") (cons js2-ASSIGN_BITOR "|=") (cons js2-ASSIGN_BITXOR "^=") (cons js2-ASSIGN_BITAND "&=") (cons js2-ASSIGN_LSH "<<=") (cons js2-ASSIGN_RSH ">>=") (cons js2-ASSIGN_URSH ">>>=") (cons js2-ASSIGN_ADD "+=") (cons js2-ASSIGN_SUB "-=") (cons js2-ASSIGN_MUL "*=") (cons js2-ASSIGN_DIV "/=") (cons js2-ASSIGN_MOD "%=")))) (loop for (k . v) in tokens do (puthash k v table)) table)) nil [154672 156660]) ("js2-print-infix-node" function (:arguments ("n" "i")) nil [156662 157063]) ("js2-assign-node" type (:type "struct") nil [157065 157614]) ("put" code nil nil [157616 157683]) ("put" code nil nil [157684 157751]) ("js2-unary-node" type (:members ("operand") :type "struct") nil [157753 158319]) ("put" code nil nil [158348 158414]) ("put" code nil nil [158415 158481]) ("js2-visit-unary-node" function (:arguments ("n" "v")) nil [158483 158564]) ("js2-print-unary-node" function (:arguments ("n" "i")) nil [158566 159036]) ("js2-let-node" type (:members ("vars" "body" "lp" "rp") :type "struct") nil [159038 159777]) ("put" code nil nil [159779 159841]) ("put" code nil nil [159842 159904]) ("js2-visit-let-node" function (:arguments ("n" "v")) nil [159906 160088]) ("js2-print-let-node" function (:arguments ("n" "i")) nil [160090 160258]) ("js2-keyword-node" type (:type "struct") nil [160260 160736]) ("put" code nil nil [160738 160800]) ("put" code nil nil [160801 160871]) ("js2-print-keyword-node" function (:arguments ("n" "i")) nil [160873 161265]) ("js2-this-node-p" function (:arguments ("node")) nil [161267 161405]) ("js2-new-node" type (:members ("target" "args" "lp" "rp" "initializer") :type "struct") nil [161407 162216]) ("put" code nil nil [162275 162337]) ("put" code nil nil [162338 162400]) ("js2-visit-new-node" function (:arguments ("n" "v")) nil [162402 162632]) ("js2-print-new-node" function (:arguments ("n" "i")) nil [162634 162918]) ("js2-name-node" type (:members ("name" "scope") :type "struct") nil [162920 163439]) ("put" code nil nil [163486 163545]) ("put" code nil nil [163546 163610]) ("js2-print-name-node" function (:arguments ("n" "i")) nil [163612 163706]) ("js2-name-node-length" function (:arguments ("node")) nil [163708 163919]) ("js2-number-node" type (:members ("value" "num-value") :type "struct") nil [163921 164563]) ("put" code nil nil [164591 164652]) ("put" code nil nil [164653 164721]) ("js2-print-number-node" function (:arguments ("n" "i")) nil [164723 164841]) ("js2-regexp-node" type (:members ("value" "flags") :type "struct") nil [164843 165458]) ("put" code nil nil [165492 165553]) ("put" code nil nil [165554 165617]) ("js2-print-regexp" function (:arguments ("n" "i")) nil [165619 165815]) ("js2-string-node" type (:members ("value") :type "struct") nil [165817 166445]) ("put" code nil nil [166500 166561]) ("put" code nil nil [166562 166630]) ("js2-print-string-node" function (:arguments ("n" "i")) nil [166632 166725]) ("js2-array-node" type (:members ("elems") :type "struct") nil [166727 167121]) ("put" code nil nil [167188 167254]) ("put" code nil nil [167255 167321]) ("js2-visit-array-node" function (:arguments ("n" "v")) nil [167323 167464]) ("js2-print-array-node" function (:arguments ("n" "i")) nil [167466 167591]) ("js2-object-node" type (:members ("elems") :type "struct") nil [167593 168005]) ("put" code nil nil [168048 168116]) ("put" code nil nil [168117 168185]) ("js2-visit-object-node" function (:arguments ("n" "v")) nil [168187 168287]) ("js2-print-object-node" function (:arguments ("n" "i")) nil [168289 168416]) ("js2-object-prop-node" type (:type "struct") nil [168418 169129]) ("put" code nil nil [169131 169203]) ("put" code nil nil [169204 169282]) ("js2-print-object-prop-node" function (:arguments ("n" "i")) nil [169284 169468]) ("js2-getter-setter-node" type (:type "struct") nil [169470 170191]) ("put" code nil nil [170193 170267]) ("put" code nil nil [170268 170345]) ("js2-print-getter-setter" function (:arguments ("n" "i")) nil [170347 170647]) ("js2-prop-get-node" type (:type "struct") nil [170649 171152]) ("put" code nil nil [171154 171226]) ("put" code nil nil [171227 171299]) ("js2-visit-prop-get-node" function (:arguments ("n" "v")) nil [171301 171510]) ("js2-print-prop-get-node" function (:arguments ("n" "i")) nil [171512 171687]) ("js2-elem-get-node" type (:members ("target" "element" "lb" "rb") :type "struct") nil [171689 172467]) ("put" code nil nil [172517 172589]) ("put" code nil nil [172590 172662]) ("js2-visit-elem-get-node" function (:arguments ("n" "v")) nil [172664 172881]) ("js2-print-elem-get-node" function (:arguments ("n" "i")) nil [172883 173077]) ("js2-call-node" type (:members ("target" "args" "lp" "rp") :type "struct") nil [173079 173794]) ("put" code nil nil [173843 173907]) ("put" code nil nil [173908 173972]) ("js2-visit-call-node" function (:arguments ("n" "v")) nil [173974 174118]) ("js2-print-call-node" function (:arguments ("n" "i")) nil [174120 174298]) ("js2-yield-node" type (:members ("value") :type "struct") nil [174300 174704]) ("put" code nil nil [174739 174805]) ("put" code nil nil [174806 174872]) ("js2-visit-yield-node" function (:arguments ("n" "v")) nil [174874 174953]) ("js2-print-yield-node" function (:arguments ("n" "i")) nil [174955 175134]) ("js2-paren-node" type (:members ("expr") :type "struct") nil [175136 175669]) ("put" code nil nil [175686 175752]) ("put" code nil nil [175753 175819]) ("js2-visit-paren-node" function (:arguments ("n" "v")) nil [175821 175899]) ("js2-print-paren-node" function (:arguments ("n" "i")) nil [175901 176037]) ("js2-array-comp-node" type (:members ("result" "loops" "filter" "if-pos" "lp" "rp") :type "struct") nil [176039 177102]) ("put" code nil nil [177173 177249]) ("put" code nil nil [177250 177326]) ("js2-visit-array-comp-node" function (:arguments ("n" "v")) nil [177328 177580]) ("js2-print-array-comp-node" function (:arguments ("n" "i")) nil [177582 178004]) ("js2-array-comp-loop-node" type (:type "struct") nil [178006 178899]) ("put" code nil nil [178901 178982]) ("put" code nil nil [178983 179064]) ("js2-visit-array-comp-loop" function (:arguments ("n" "v")) nil [179066 179219]) ("js2-print-array-comp-loop" function (:arguments ("n" "i")) nil [179221 179426]) ("js2-empty-expr-node" type (:type "struct") nil [179428 179776]) ("put" code nil nil [179778 179843]) ("put" code nil nil [179844 179909]) ("js2-xml-node" type (:type "struct") nil [179911 180437]) ("put" code nil nil [180439 180498]) ("put" code nil nil [180499 180561]) ("js2-print-xml-node" function (:arguments ("n" "i")) nil [180563 180660]) ("js2-xml-js-expr-node" type (:members ("expr") :type "struct") nil [180662 181177]) ("put" code nil nil [181213 181286]) ("put" code nil nil [181287 181360]) ("js2-visit-xml-js-expr" function (:arguments ("n" "v")) nil [181362 181447]) ("js2-print-xml-js-expr" function (:arguments ("n" "i")) nil [181449 181592]) ("js2-xml-dot-query-node" type (:members ("rp") :type "struct") nil [181594 182422]) ("put" code nil nil [182424 182498]) ("put" code nil nil [182499 182576]) ("js2-print-xml-dot-query" function (:arguments ("n" "i")) nil [182578 182779]) ("js2-xml-ref-node" type (:members ("namespace" "at-pos" "colon-pos") :type "struct") nil [182781 183967]) ("js2-xml-ref-node-attr-access-p" function (:arguments ("node")) nil [183969 184173]) ("js2-xml-prop-ref-node" type (:members ("propname") :type "struct") nil [184175 185286]) ("put" code nil nil [185288 185368]) ("put" code nil nil [185369 185449]) ("js2-visit-xml-prop-ref-node" function (:arguments ("n" "v")) nil [185451 185696]) ("js2-print-xml-prop-ref-node" function (:arguments ("n" "i")) nil [185698 186050]) ("js2-xml-elem-ref-node" type (:members ("expr" "lb" "rb") :type "struct") nil [186052 187544]) ("put" code nil nil [187546 187626]) ("put" code nil nil [187627 187707]) ("js2-visit-xml-elem-ref-node" function (:arguments ("n" "v")) nil [187709 187946]) ("js2-print-xml-elem-ref-node" function (:arguments ("n" "i")) nil [187948 188322]) ("js2-xml-start-tag-node" type (:members ("name" "attrs" "empty-p") :type "struct") nil [188402 189197]) ("put" code nil nil [189257 189334]) ("put" code nil nil [189335 189412]) ("js2-visit-xml-start-tag" function (:arguments ("n" "v")) nil [189414 189605]) ("js2-print-xml-start-tag" function (:arguments ("n" "i")) nil [189607 189860]) ("js2-xml-end-tag-node" type (:members ("name") :type "struct") nil [190001 190441]) ("put" code nil nil [190468 190541]) ("put" code nil nil [190542 190615]) ("js2-visit-xml-end-tag" function (:arguments ("n" "v")) nil [190617 190702]) ("js2-print-xml-end-tag" function (:arguments ("n" "i")) nil [190704 190848]) ("js2-xml-name-node" type (:members ("namespace") :type "struct") nil [190850 191646]) ("put" code nil nil [191671 191743]) ("put" code nil nil [191744 191816]) ("js2-visit-xml-name-node" function (:arguments ("n" "v")) nil [191818 191907]) ("js2-print-xml-name-node" function (:arguments ("n" "i")) nil [191909 192157]) ("js2-xml-pi-node" type (:members ("name" "attrs") :type "struct") nil [192159 192686]) ("put" code nil nil [192720 192788]) ("put" code nil nil [192789 192857]) ("js2-visit-xml-pi-node" function (:arguments ("n" "v")) nil [192859 193010]) ("js2-print-xml-pi-node" function (:arguments ("n" "i")) nil [193012 193238]) ("js2-xml-cdata-node" type (:members ("content") :type "struct") nil [193240 193684]) ("put" code nil nil [193747 193821]) ("put" code nil nil [193822 193896]) ("js2-visit-xml-cdata-node" function (:arguments ("n" "v")) nil [193898 193987]) ("js2-print-xml-cdata-node" function (:arguments ("n" "i")) nil [193989 194104]) ("js2-xml-attr-node" type (:members ("name" "value" "eq-pos" "quote-type") :type "struct") nil [194106 194823]) ("put" code nil nil [194846 194918]) ("put" code nil nil [194919 194991]) ("js2-visit-xml-attr-node" function (:arguments ("n" "v")) nil [194993 195125]) ("js2-print-xml-attr-node" function (:arguments ("n" "i")) nil [195127 195449]) ("js2-xml-text-node" type (:members ("content") :type "struct") nil [195451 195872]) ("put" code nil nil [195937 196009]) ("put" code nil nil [196010 196082]) ("js2-visit-xml-text-node" function (:arguments ("n" "v")) nil [196084 196171]) ("js2-print-xml-text-node" function (:arguments ("n" "i")) nil [196173 196309]) ("js2-xml-comment-node" type (:type "struct") nil [196311 196682]) ("put" code nil nil [196684 196750]) ("put" code nil nil [196751 196824]) ("js2-print-xml-comment" function (:arguments ("n" "i")) nil [196826 196919]) ("js2-node-line" function (:arguments ("n")) nil [196941 197144]) ("js2-block-node-kid" function (:arguments ("n" "i")) nil [197146 197279]) ("js2-block-node-first" function (:arguments ("n")) nil [197281 197415]) ("js2-node-root" function (:arguments ("n")) nil [197417 197620]) ("js2-node-position-in-parent" function (:arguments ("node" "&optional" "parent")) nil [197622 198080]) ("js2-node-short-name" function (:arguments ("n")) nil [198082 198259]) ("js2-node-child-list" function (:arguments ("node")) nil [198261 199143]) ("js2-node-set-child-list" function (:arguments ("node" "kids")) nil [199145 199935]) ("js2-paren-expr-nodes" variable (:constant-flag t :default-value (quote (cl-struct-js2-array-comp-loop-node cl-struct-js2-array-comp-node cl-struct-js2-call-node cl-struct-js2-catch-node cl-struct-js2-do-node cl-struct-js2-elem-get-node cl-struct-js2-for-in-node cl-struct-js2-for-node cl-struct-js2-function-node cl-struct-js2-if-node cl-struct-js2-let-node cl-struct-js2-new-node cl-struct-js2-paren-node cl-struct-js2-switch-node cl-struct-js2-while-node cl-struct-js2-with-node cl-struct-js2-xml-dot-query-node))) nil [200017 200692]) ("js2-paren-expr-node-p" function (:arguments ("node")) nil [200694 201057]) ("js2-node-lp" function (:arguments ("node")) nil [201089 202164]) ("js2-node-rp" function (:arguments ("node")) nil [202197 203302]) ("js2-node-first-child" function (:arguments ("node")) nil [203304 203442]) ("js2-node-last-child" function (:arguments ("node")) nil [203444 203587]) ("js2-node-prev-sibling" function (:arguments ("node")) nil [203589 204062]) ("js2-node-next-sibling" function (:arguments ("node")) nil [204064 204437]) ("js2-node-find-child-before" function (:arguments ("pos" "parent" "&optional" "after")) nil [204439 205439]) ("js2-node-find-child-after" function (:arguments ("pos" "parent")) nil [205441 205727]) ("js2-node-replace-child" function (:arguments ("pos" "parent" "new-node")) nil [205729 206098]) ("js2-node-buffer" function (:arguments ("n")) nil [206100 206411]) ("js2-block-node-push" function (:arguments ("n" "kid")) nil [206413 206825]) ("js2-node-string" function (:arguments ("node")) nil [206827 207162]) ("js2-discovered-node" variable nil nil [207232 207264]) ("make-variable-buffer-local" code nil nil [207265 207314]) ("js2-visitor-offset" variable nil nil [207375 207406]) ("make-variable-buffer-local" code nil nil [207407 207455]) ("js2-node-search-point" variable nil nil [207457 207491]) ("make-variable-buffer-local" code nil nil [207492 207543]) ("when" code nil nil [207545 207943]) ("js2-node-at-point" function (:arguments ("&optional" "pos" "skip-comments")) nil [207945 209357]) ("js2-node-at-point-visitor" function (:arguments ("node" "end-p")) nil [209359 210450]) ("js2-block-comment-p" function (:arguments ("node")) nil [210508 210714]) ("js2-comment-at-point" function (:arguments ("&optional" "pos")) nil [210786 211459]) ("js2-mode-find-parent-fn" function (:arguments ("node")) nil [211461 211749]) ("js2-mode-find-enclosing-fn" function (:arguments ("node")) nil [211751 212055]) ("js2-mode-find-enclosing-node" function (:arguments ("beg" "end")) nil [212057 212541]) ("js2-node-parent-script-or-fn" function (:arguments ("node")) nil [212543 212924]) ("js2-nested-function-p" function (:arguments ("node")) nil [212926 213277]) ("js2-mode-shift-kids" function (:arguments ("kids" "start" "offset")) nil [213279 213430]) ("js2-mode-shift-children" function (:arguments ("parent" "start" "offset")) nil [213432 213731]) ("js2-node-is-descendant" function (:arguments ("node" "ancestor")) nil [213733 213933]) ("js2-visit-none" function (:arguments ("node" "callback")) nil [213963 214060]) ("js2-print-none" function (:arguments ("node" "indent")) nil [214062 214155]) ("js2-print-body" function (:arguments ("node" "indent")) nil [214157 214389]) ("js2-print-list" function (:arguments ("args" "&optional" "delimiter")) nil [214391 214632]) ("js2-print-tree" function (:arguments ("ast")) nil [214634 214855]) ("js2-print-ast" function (:arguments ("node" "&optional" "indent")) nil [214857 215265]) ("js2-side-effecting-tokens" variable (:constant-flag t :default-value (let ((tokens (make-bool-vector js2-num-tokens nil))) (dolist (tt (list js2-ASSIGN js2-ASSIGN_ADD js2-ASSIGN_BITAND js2-ASSIGN_BITOR js2-ASSIGN_BITXOR js2-ASSIGN_DIV js2-ASSIGN_LSH js2-ASSIGN_MOD js2-ASSIGN_MUL js2-ASSIGN_RSH js2-ASSIGN_SUB js2-ASSIGN_URSH js2-BLOCK js2-BREAK js2-CALL js2-CATCH js2-CATCH_SCOPE js2-CONST js2-CONTINUE js2-DEBUGGER js2-DEC js2-DELPROP js2-DEL_REF js2-DO js2-ELSE js2-EMPTY js2-ENTERWITH js2-EXPORT js2-EXPR_RESULT js2-FINALLY js2-FOR js2-FUNCTION js2-GOTO js2-IF js2-IFEQ js2-IFNE js2-IMPORT js2-INC js2-JSR js2-LABEL js2-LEAVEWITH js2-LET js2-LETEXPR js2-LOCAL_BLOCK js2-LOOP js2-NEW js2-REF_CALL js2-RETHROW js2-RETURN js2-RETURN_RESULT js2-SEMI js2-SETELEM js2-SETELEM_OP js2-SETNAME js2-SETPROP js2-SETPROP_OP js2-SETVAR js2-SET_REF js2-SET_REF_OP js2-SWITCH js2-TARGET js2-THROW js2-TRY js2-VAR js2-WHILE js2-WITH js2-WITHEXPR js2-YIELD)) (aset tokens tt t)) (if js2-instanceof-has-side-effects (aset tokens js2-INSTANCEOF t)) tokens)) nil [215267 217778]) ("js2-node-has-side-effects" function (:arguments ("node")) nil [217780 219021]) ("js2-member-expr-leftmost-name" function (:arguments ("node")) nil [219023 219957]) ("js2-stmt-node-types" variable (:constant-flag t :default-value (list js2-BLOCK js2-BREAK js2-CONTINUE js2-DEFAULT js2-DO js2-EXPR_RESULT js2-EXPR_VOID js2-FOR js2-IF js2-RETURN js2-SWITCH js2-THROW js2-TRY js2-WHILE js2-WITH)) nil [219959 220853]) ("js2-stmt-node-p" function (:arguments ("node")) nil [220855 221250]) ("js2-mode-find-first-stmt" function (:arguments ("node")) nil [221252 221552]) ("js2-node-parent-stmt" function (:arguments ("node")) nil [221554 222118]) ("js2-END_UNREACHED" variable (:constant-flag t) nil [223974 224004]) ("js2-END_DROPS_OFF" variable (:constant-flag t :default-value 1) nil [224005 224035]) ("js2-END_RETURNS" variable (:constant-flag t :default-value 2) nil [224036 224064]) ("js2-END_RETURNS_VALUE" variable (:constant-flag t :default-value 4) nil [224065 224099]) ("js2-END_YIELDS" variable (:constant-flag t :default-value 8) nil [224100 224127]) ("js2-has-consistent-return-usage" function (:arguments ("node")) nil [224129 224682]) ("js2-end-check-if" function (:arguments ("node")) nil [224684 225178]) ("js2-end-check-switch" function (:arguments ("node")) nil [225180 226080]) ("js2-end-check-try" function (:arguments ("node")) nil [226082 227153]) ("js2-end-check-loop" function (:arguments ("node")) nil [227155 228421]) ("js2-end-check-block" function (:arguments ("node")) nil [228423 229115]) ("js2-end-check-label" function (:arguments ("node")) nil [229117 229620]) ("js2-end-check-break" function (:arguments ("node")) nil [229622 230013]) ("js2-end-check" function (:arguments ("node")) nil [230015 231497]) ("js2-always-defined-boolean-p" function (:arguments ("node")) nil [231499 232083]) ("js2-ast" package nil nil [232085 232103]) ("js2-set-face" function (:arguments ("beg" "end" "face" "&optional" "record")) nil [232287 232707]) ("js2-set-kid-face" function (:arguments ("pos" "kid" "len" "face")) nil [232709 233042]) ("js2-fontify-kwd" function (:arguments ("start" "length")) nil [233044 233149]) ("js2-clear-face" function (:arguments ("beg" "end")) nil [233151 233386]) ("js2-record-text-property" function (:arguments ("beg" "end" "prop" "value")) nil [233388 233565]) ("js2-ecma-global-props" variable (:constant-flag t :default-value (concat "^" (regexp-opt (quote ("Infinity" "NaN" "undefined" "arguments")) t) "$")) nil [233567 233803]) ("js2-ecma-object-props" variable (:constant-flag t :default-value (concat "^" (regexp-opt (quote ("prototype" "__proto__" "__parent__")) t) "$")) nil [233861 234098]) ("js2-ecma-global-funcs" variable (:constant-flag t :default-value (concat "^" (regexp-opt (quote ("decodeURI" "decodeURIComponent" "encodeURI" "encodeURIComponent" "eval" "isFinite" "isNaN" "parseFloat" "parseInt")) t) "$")) nil [234100 234402]) ("js2-ecma-number-props" variable (:constant-flag t :default-value (concat "^" (regexp-opt (quote ("MAX_VALUE" "MIN_VALUE" "NaN" "NEGATIVE_INFINITY" "POSITIVE_INFINITY")) t) "$")) nil [234404 234705]) ("js2-ecma-date-props" variable (:constant-flag t :default-value "^\\(parse\\|UTC\\)$") nil [234707 234851]) ("js2-ecma-math-props" variable (:constant-flag t :default-value (concat "^" (regexp-opt (quote ("E" "LN10" "LN2" "LOG2E" "LOG10E" "PI" "SQRT1_2" "SQRT2")) t) "$")) nil [234854 235107]) ("js2-ecma-math-funcs" variable (:constant-flag t :default-value (concat "^" (regexp-opt (quote ("abs" "acos" "asin" "atan" "atan2" "ceil" "cos" "exp" "floor" "log" "max" "min" "pow" "random" "round" "sin" "sqrt" "tan")) t) "$")) nil [235110 235439]) ("js2-ecma-function-props" variable (:constant-flag t :default-value (concat "^" (regexp-opt (quote ("hasOwnProperty" "isPrototypeOf" "propertyIsEnumerable" "toLocaleString" "toString" "valueOf" "apply" "call" "concat" "join" "pop" "push" "reverse" "shift" "slice" "sort" "splice" "unshift" "charAt" "charCodeAt" "fromCharCode" "indexOf" "lastIndexOf" "localeCompare" "match" "replace" "search" "split" "substring" "toLocaleLowerCase" "toLocaleUpperCase" "toLowerCase" "toUpperCase" "toExponential" "toFixed" "toPrecision" "getDate" "getDay" "getFullYear" "getHours" "getMilliseconds" "getMinutes" "getMonth" "getSeconds" "getTime" "getTimezoneOffset" "getUTCDate" "getUTCDay" "getUTCFullYear" "getUTCHours" "getUTCMilliseconds" "getUTCMinutes" "getUTCMonth" "getUTCSeconds" "setDate" "setFullYear" "setHours" "setMilliseconds" "setMinutes" "setMonth" "setSeconds" "setTime" "setUTCDate" "setUTCFullYear" "setUTCHours" "setUTCMilliseconds" "setUTCMinutes" "setUTCMonth" "setUTCSeconds" "toDateString" "toLocaleDateString" "toLocaleString" "toLocaleTimeString" "toTimeString" "toUTCString" "exec" "test" "toSource" "__defineGetter__" "__defineSetter__" "__lookupGetter__" "__lookupSetter__" "__noSuchMethod__" "every" "filter" "forEach" "lastIndexOf" "map" "some")) t) "$")) nil [235441 237354]) ("js2-parse-highlight-prop-get" function (:arguments ("parent" "target" "prop" "call-p")) nil [237356 239277]) ("js2-parse-highlight-member-expr-node" function (:arguments ("node")) nil [239279 241296]) ("js2-parse-highlight-member-expr-fn-name" function (:arguments ("expr")) nil [241298 242019]) ("js2-jsdoc-param-tag-regexp" variable (:constant-flag t :default-value (concat "^\\s-*\\*+\\s-*\\(@" "\\(?:param\\|argument\\)" "\\)" "\\s-*\\({[^}]+}\\)?" "\\s-*\\([a-zA-Z0-9_$]+\\)?" "\\>")) nil [242201 242510]) ("js2-jsdoc-typed-tag-regexp" variable (:constant-flag t :default-value (concat "^\\s-*\\*+\\s-*\\(@\\(?:" (regexp-opt (quote ("requires" "return" "returns" "throw" "throws"))) "\\)\\)\\s-*\\({[^}]+}\\)?")) nil [242512 242752]) ("js2-jsdoc-arg-tag-regexp" variable (:constant-flag t :default-value (concat "^\\s-*\\*+\\s-*\\(@\\(?:" (regexp-opt (quote ("base" "extends" "member" "type" "version"))) "\\)\\)\\s-+\\([^ 	]+\\)")) nil [242754 242991]) ("js2-jsdoc-empty-tag-regexp" variable (:constant-flag t :default-value (concat "^\\s-*\\*+\\s-*\\(@\\(?:" (regexp-opt (quote ("addon" "author" "class" "constructor" "deprecated" "exec" "exception" "fileoverview" "final" "ignore" "private"))) "\\)\\)\\s-*")) nil [242993 243285]) ("js2-jsdoc-link-tag-regexp" variable (:constant-flag t :default-value "{\\(@link\\)\\s-+\\([^#}
]+\\)\\(#.+\\)?}") nil [243287 243400]) ("js2-jsdoc-see-tag-regexp" variable (:constant-flag t :default-value "^\\s-*\\*+\\s-*\\(@see\\)\\s-+\\([^#}
]+\\)\\(#.+\\)?") nil [243402 243526]) ("js2-jsdoc-html-tag-regexp" variable (:constant-flag t :default-value "\\(</?\\)\\([a-zA-Z]+\\)\\s-*\\(/?>\\)") nil [243528 243668]) ("js2-jsdoc-highlight-helper" function nil nil [243670 244349]) ("js2-highlight-jsdoc" function (:arguments ("ast")) nil [244351 245824]) ("js2-highlight-assign-targets" function (:arguments ("node" "left" "right")) nil [245826 247033]) ("js2-highlight-undeclared-vars" function nil nil [247035 248205]) ("js2-highlight" package nil nil [248207 248231]) ("js2-prop-node-name" function (:arguments ("node")) nil [251738 252286]) ("js2-node-qname-component" function (:arguments ("node")) nil [252288 252659]) ("js2-record-function-qname" function (:arguments ("fn-node" "qname")) nil [252661 253188]) ("js2-record-imenu-functions" function (:arguments ("node" "&optional" "var")) nil [253190 254359]) ("js2-compute-nested-prop-get" function (:arguments ("node")) nil [254361 255547]) ("js2-record-object-literal" function (:arguments ("node" "qname")) nil [255549 257184]) ("js2-node-top-level-decl-p" function (:arguments ("node")) nil [257186 257772]) ("js2-browse-postprocess-chains" function (:arguments ("chains")) nil [257774 259397]) ("js2-treeify" function (:arguments ("lst")) nil [260734 260912]) ("js2-build-alist-trie" function (:arguments ("chains" "trie")) nil [260914 262628]) ("js2-flatten-trie" function (:arguments ("trie")) nil [262630 263445]) ("js2-build-imenu-index" function nil nil [263447 263740]) ("js2-test-print-chains" function (:arguments ("chains")) nil [263742 264447]) ("js2-browse" package nil nil [264450 264471]) ("cl" include nil nil [267278 267291]) ("js2-version" variable (:constant-flag t :default-value "1.7.0") nil [267312 267403]) ("js2-record-face" function (:arguments ("face")) nil [267405 267552]) ("js2-node-end" function (:arguments ("n")) nil [267554 267803]) ("js2-record-comment" function nil nil [267805 268250]) ("js2-peek-token" function nil nil [268390 270272]) ("js2-peek-flagged-token" function nil nil [270300 270446]) ("js2-consume-token" function nil nil [270448 270522]) ("js2-next-token" function nil nil [270524 270609]) ("js2-next-flagged-token" function nil nil [270611 270726]) ("js2-match-token" function (:arguments ("match")) nil [270728 270968]) ("js2-valid-prop-name-token" function (:arguments ("tt")) nil [270970 271141]) ("js2-match-prop-name" function nil nil [271143 271469]) ("js2-must-match-prop-name" function (:arguments ("msg-id" "&optional" "pos" "len")) nil [271471 271620]) ("js2-peek-token-or-eol" function nil nil [271622 272127]) ("js2-set-check-for-label" function nil nil [272129 272305]) ("js2-must-match" function (:arguments ("token" "msg-id" "&optional" "pos" "len")) nil [272307 272617]) ("js2-inside-function" function nil nil [272619 272686]) ("js2-set-requires-activation" function nil nil [272688 272860]) ("js2-check-activation-name" function (:arguments ("name" "token")) nil [272862 273205]) ("js2-set-is-generator" function nil nil [273207 273368]) ("js2-must-have-xml" function nil nil [273370 273486]) ("js2-push-scope" function (:arguments ("scope")) nil [273488 273793]) ("js2-pop-scope" function nil nil [273795 273900]) ("js2-enter-loop" function (:arguments ("loop-node")) nil [273902 274525]) ("js2-exit-loop" function nil nil [274527 274625]) ("js2-enter-switch" function (:arguments ("switch-node")) nil [274627 274713]) ("js2-exit-switch" function nil nil [274715 274776]) ("js2-parse" function (:arguments ("&optional" "buf" "cb")) nil [274778 277242]) ("js2-do-parse" function nil nil [277293 278888]) ("js2-function-parser" function nil nil [278890 278996]) ("js2-parse-function-body" function (:arguments ("fn-node")) nil [278998 280049]) ("js2-parse-function-params" function (:arguments ("fn-node" "pos")) nil [280051 281046]) ("js2-check-inconsistent-return-warning" function (:arguments ("fn-node" "name")) nil [281048 281954]) ("js2-parse-function" function (:arguments ("function-type")) nil [281956 286286]) ("js2-parse-statements" function (:arguments ("&optional" "parent")) nil [286288 287246]) ("js2-parse-statement" function nil nil [287248 287880]) ("js2-parsers" variable (:constant-flag t :default-value (let ((parsers (make-vector js2-num-tokens (function js2-parse-expr-stmt)))) (aset parsers js2-BREAK (function js2-parse-break)) (aset parsers js2-CONST (function js2-parse-const-var)) (aset parsers js2-CONTINUE (function js2-parse-continue)) (aset parsers js2-DEBUGGER (function js2-parse-debugger)) (aset parsers js2-DEFAULT (function js2-parse-default-xml-namespace)) (aset parsers js2-DO (function js2-parse-do)) (aset parsers js2-FOR (function js2-parse-for)) (aset parsers js2-FUNCTION (function js2-function-parser)) (aset parsers js2-IF (function js2-parse-if)) (aset parsers js2-LC (function js2-parse-block)) (aset parsers js2-LET (function js2-parse-let-stmt)) (aset parsers js2-NAME (function js2-parse-name-or-label)) (aset parsers js2-RETURN (function js2-parse-ret-yield)) (aset parsers js2-SEMI (function js2-parse-semi)) (aset parsers js2-SWITCH (function js2-parse-switch)) (aset parsers js2-THROW (function js2-parse-throw)) (aset parsers js2-TRY (function js2-parse-try)) (aset parsers js2-VAR (function js2-parse-const-var)) (aset parsers js2-WHILE (function js2-parse-while)) (aset parsers js2-WITH (function js2-parse-with)) (aset parsers js2-YIELD (function js2-parse-ret-yield)) parsers)) nil [287948 289252]) ("js2-parse-warn-missing-semi" function (:arguments ("beg" "end")) nil [289254 289611]) ("js2-no-semi-insertion" variable (:constant-flag t :default-value (list js2-IF js2-SWITCH js2-WHILE js2-DO js2-FOR js2-TRY js2-WITH js2-LC js2-ERROR js2-SEMI js2-FUNCTION)) nil [289613 289897]) ("js2-autoinsert-semi-and-warn" variable (:constant-flag t :default-value (list js2-ERROR js2-EOF js2-RC)) nil [289899 289972]) ("js2-statement-helper" function nil nil [289974 291344]) ("js2-parse-condition" function nil nil [291346 292289]) ("js2-parse-if" function nil nil [292291 293330]) ("js2-parse-switch" function nil nil [293332 295995]) ("js2-parse-while" function nil nil [295997 296743]) ("js2-parse-do" function nil nil [296745 297837]) ("js2-parse-for" function nil nil [297839 301581]) ("js2-parse-try" function nil nil [301583 305070]) ("js2-parse-throw" function nil nil [305072 305669]) ("js2-match-jump-label-name" function (:arguments ("label-name")) nil [305671 306068]) ("js2-parse-break" function nil nil [306070 307424]) ("js2-parse-continue" function nil nil [307426 308893]) ("js2-parse-with" function nil nil [308895 309741]) ("js2-parse-const-var" function nil nil [309743 310236]) ("js2-wrap-with-expr-stmt" function (:arguments ("pos" "expr" "&optional" "add-child")) nil [310238 310721]) ("js2-parse-let-stmt" function nil nil [310723 311304]) ("js2-parse-ret-yield" function nil nil [311306 311387]) ("js2-parse-return-stmt-enders" variable (:constant-flag t :default-value (list js2-SEMI js2-RC js2-EOF js2-EOL js2-ERROR js2-RB js2-RP js2-YIELD)) nil [311389 311503]) ("js2-now-all-set" function (:arguments ("before" "after" "mask")) nil [311505 311859]) ("js2-parse-return-or-yield" function (:arguments ("tt" "expr-context")) nil [311861 314649]) ("js2-parse-debugger" function nil nil [314651 314747]) ("js2-parse-block" function nil nil [314749 315182]) ("js2-parse-semi" function nil nil [315251 315658]) ("js2-parse-default-xml-namespace" function nil nil [315660 316794]) ("js2-record-label" function (:arguments ("label" "bundle")) nil [316796 317681]) ("js2-parse-name-or-label" function nil nil [317683 319493]) ("js2-parse-expr-stmt" function nil nil [319495 319661]) ("js2-parse-variables" function (:arguments ("decl-type" "pos")) nil [319663 322589]) ("js2-parse-let" function (:arguments ("pos" "&optional" "stmt-p")) nil [322591 324105]) ("js2-define-new-symbol" function (:arguments ("decl-type" "name" "node")) nil [324107 324295]) ("js2-define-symbol" function (:arguments ("decl-type" "name" "&optional" "node" "ignore-not-in-block")) nil [324297 326382]) ("js2-parse-expr" function nil nil [326384 327140]) ("js2-parse-assign-expr" function nil nil [327142 328395]) ("js2-parse-cond-expr" function nil nil [328397 329302]) ("js2-make-binary" function (:arguments ("type" "left" "parser")) nil [329304 330147]) ("js2-parse-or-expr" function nil nil [330149 330383]) ("js2-parse-and-expr" function nil nil [330385 330626]) ("js2-parse-bit-or-expr" function nil nil [330628 330882]) ("js2-parse-bit-xor-expr" function nil nil [330884 331141]) ("js2-parse-bit-and-expr" function nil nil [331143 331390]) ("js2-parse-eq-ops" variable (:constant-flag t :default-value (list js2-EQ js2-NE js2-SHEQ js2-SHNE)) nil [331392 331460]) ("js2-parse-eq-expr" function nil nil [331462 331757]) ("js2-parse-rel-ops" variable (:constant-flag t :default-value (list js2-IN js2-INSTANCEOF js2-LE js2-LT js2-GE js2-GT)) nil [331759 331846]) ("js2-parse-rel-expr" function nil nil [331848 332262]) ("js2-parse-shift-ops" variable (:constant-flag t :default-value (list js2-LSH js2-URSH js2-RSH)) nil [332264 332328]) ("js2-parse-shift-expr" function nil nil [332330 332675]) ("js2-parse-add-expr" function nil nil [332677 333025]) ("js2-parse-mul-ops" variable (:constant-flag t :default-value (list js2-MUL js2-DIV js2-MOD)) nil [333027 333088]) ("js2-parse-mul-expr" function nil nil [333090 333435]) ("js2-make-unary" function (:arguments ("type" "parser" "&rest" "args")) nil [333437 334194]) ("js2-incrementable-node-types" variable (:constant-flag t :default-value (list js2-NAME js2-GETPROP js2-GETELEM js2-GET_REF js2-CALL)) nil [334196 334361]) ("js2-check-bad-inc-dec" function (:arguments ("tt" "beg" "end" "unary")) nil [334363 334689]) ("js2-parse-unary-expr" function nil nil [334691 336419]) ("js2-parse-xml-initializer" function nil nil [336421 338648]) ("js2-parse-argument-list" function nil nil [338651 339169]) ("js2-parse-member-expr" function (:arguments ("&optional" "allow-call-syntax")) nil [339171 340647]) ("js2-parse-member-expr-tail" function (:arguments ("allow-call-syntax" "pn")) nil [340649 341596]) ("js2-parse-dot-query" function (:arguments ("pn")) nil [341598 342540]) ("js2-parse-element-get" function (:arguments ("pn")) nil [342542 343380]) ("js2-parse-function-call" function (:arguments ("pn")) nil [343382 343996]) ("js2-parse-property-access" function (:arguments ("tt" "pn")) nil [343998 346621]) ("js2-parse-attribute-access" function nil nil [346623 347604]) ("js2-parse-property-name" function (:arguments ("at-pos" "s" "member-type-flags")) nil [347606 349465]) ("js2-parse-xml-elem-ref" function (:arguments ("at-pos" "&optional" "namespace" "colon-pos")) nil [349467 350473]) ("js2-parse-primary-expr" function nil nil [350475 353060]) ("js2-parse-name" function (:arguments ("tt-flagged" "tt")) nil [353062 354155]) ("js2-parse-warn-trailing-comma" function (:arguments ("msg" "pos" "elems" "comma-pos")) nil [354157 354516]) ("js2-parse-array-literal" function nil nil [354518 356345]) ("js2-parse-array-comprehension" function (:arguments ("expr" "pos")) nil [356347 357640]) ("js2-parse-array-comp-loop" function nil nil [357642 360019]) ("js2-parse-object-literal" function nil nil [360021 361635]) ("js2-parse-named-prop" function (:arguments ("tt")) nil [361637 362920]) ("js2-parse-plain-property" function (:arguments ("prop")) nil [362922 363662]) ("js2-parse-getter-setter-prop" function (:arguments ("pos" "prop" "get-p")) nil [363664 364821]) ("js2-create-name-node" function (:arguments ("&optional" "check-activation-p" "token")) nil [364823 365691]) ("js2-parse" package nil nil [365693 365713]) ("js-possibly-braceless-keyword-re" variable (:constant-flag t :default-value (regexp-opt (quote ("catch" "do" "else" "finally" "for" "if" "try" "while" "with" "let")) (quote words))) nil [367774 368007]) ("js-indent-operator-re" variable (:constant-flag t :default-value (concat "[-+*/%<>=&^|?:.]\\([^-+*/]\\|$\\)\\|" (regexp-opt (quote ("in" "instanceof")) (quote words)))) nil [368009 368234]) ("js2-code-at-bol-p" function nil nil [368432 368532]) ("js2-insert-and-indent" function (:user-visible-flag t :arguments ("key")) nil [368617 369269]) ("js-re-search-forward-inner" function (:arguments ("regexp" "&optional" "bound" "count")) nil [369271 370036]) ("js-re-search-forward" function (:arguments ("regexp" "&optional" "bound" "noerror" "count")) nil [370038 370765]) ("js-re-search-backward-inner" function (:arguments ("regexp" "&optional" "bound" "count")) nil [370767 371519]) ("js-re-search-backward" function (:arguments ("regexp" "&optional" "bound" "noerror" "count")) nil [371521 372252]) ("js-looking-at-operator-p" function nil nil [372254 372607]) ("js-continued-expression-p" function nil nil [372609 373038]) ("js-end-of-do-while-loop-p" function (:user-visible-flag t) nil [373040 373999]) ("js-ctrl-statement-indentation" function nil nil [374001 375159]) ("js2-indent-in-array-comp" function (:arguments ("parse-status")) nil [375161 376101]) ("js2-array-comp-indentation" function (:arguments ("parse-status" "for-kwd")) nil [376103 376443]) ("js-proper-indentation" function (:arguments ("parse-status")) nil [376445 378221]) ("js2-lineup-comment" function (:arguments ("parse-status")) nil [378223 378638]) ("js2-backward-sws" function (:user-visible-flag t) nil [378640 378765]) ("js2-forward-sws" function (:user-visible-flag t) nil [378767 378889]) ("js2-current-indent" function (:arguments ("&optional" "pos")) nil [378891 379163]) ("js2-arglist-close" function nil nil [379165 379395]) ("js2-indent-looks-like-label-p" function nil nil [379397 379540]) ("js2-indent-in-objlit-p" function (:arguments ("parse-status")) nil [379542 379940]) ("js2-indent-objlit-arg-p" function (:arguments ("parse-status")) nil [380167 380483]) ("js2-indent-case-block-p" function nil nil [380485 380707]) ("js2-syntax-bol" function nil nil [380709 380935]) ("js2-bounce-indent" function (:arguments ("normal-col" "parse-status")) nil [380937 387531]) ("js2-1-line-comment-continuation-p" function nil nil [387533 388035]) ("js2-indent-line" function (:user-visible-flag t) nil [388037 389665]) ("js2-indent-region" function (:arguments ("start" "end")) nil [389667 389869]) ("js2-indent" package nil nil [389896 389917]) ("cl" include nil nil [389969 389982]) ("imenu" include nil nil [389985 390001]) ("cc-cmds" include nil nil [390002 390020]) ("js2-mode" function (:user-visible-flag t) nil [390134 393684]) ("js2-mode-check-compat" function nil nil [393686 394175]) ("js2-mode-exit" function nil nil [394177 394603]) ("js2-before-save" function nil nil [394605 394962]) ("js2-mode-reset-timer" function nil nil [394964 395197]) ("js2-mode-edit" function (:arguments ("beg" "end" "len")) nil [395199 395369]) ("js2-mode-run-font-lock" function nil nil [395371 396230]) ("js2-reparse" function (:arguments ("&optional" "force")) nil [396232 398209]) ("js2-mode-show-node" function (:user-visible-flag t) nil [398211 399144]) ("js2-mode-hide-overlay" function (:arguments ("&optional" "p1" "p2")) nil [399146 399719]) ("js2-mode-reset" function (:user-visible-flag t) nil [399721 399834]) ("js2-mode-show-warn-or-err" function (:arguments ("e" "face")) nil [399836 400512]) ("js2-remove-overlays" function nil nil [400514 400785]) ("js2-mode-fontify-regions" function nil nil [400787 401373]) ("js2-mode-show-errors" function nil nil [401375 401575]) ("js2-mode-remove-suppressed-warnings" function nil nil [401577 402915]) ("js2-mode-show-warnings" function nil nil [402917 403133]) ("js2-echo-error" function (:arguments ("old-point" "new-point")) nil [403135 403305]) ("defalias" code nil nil [403307 403350]) ("js2-enter-key" function (:user-visible-flag t) nil [403352 404087]) ("js2-mode-split-string" function (:arguments ("parse-status")) nil [404089 404974]) ("js2-mode-extend-comment" function nil nil [404976 406661]) ("js2-fill-string" function (:arguments ("beg" "quote")) nil [406663 407727]) ("js2-fill-paragraph" function (:arguments ("arg")) nil [407729 408515]) ("js2-fill-comment" function (:arguments ("parse-status" "arg")) nil [408517 410075]) ("js2-beginning-of-line" function (:user-visible-flag t) nil [410077 410692]) ("js2-end-of-line" function (:user-visible-flag t) nil [410694 410883]) ("js2-enter-mirror-mode" function (:user-visible-flag t) nil [410885 411638]) ("js2-leave-mirror-mode" function (:user-visible-flag t) nil [411640 411835]) ("js2-mode-inside-string" function nil nil [411837 412106]) ("js2-mode-inside-comment-or-string" function nil nil [412108 412628]) ("js2-mode-match-curly" function (:user-visible-flag t :arguments ("arg")) nil [412630 413734]) ("js2-mode-match-bracket" function (:user-visible-flag t) nil [413736 414080]) ("js2-mode-match-paren" function (:user-visible-flag t) nil [414082 414446]) ("js2-match-quote" function (:arguments ("quote-string")) nil [414448 415527]) ("js2-mode-match-single-quote" function (:user-visible-flag t) nil [415564 415865]) ("js2-mode-match-double-quote" function (:user-visible-flag t) nil [415867 415980]) ("js2-mode-magic-close-paren" function (:user-visible-flag t) nil [415982 416801]) ("js2-mode-wait-for-parse" function (:arguments ("callback")) nil [416803 417132]) ("js2-mode-parse-finished" function nil nil [417134 417625]) ("js2-mode-flag-region" function (:arguments ("from" "to" "flag")) nil [417627 418102]) ("js2-isearch-open-invisible" function (:arguments ("overlay")) nil [418257 418399]) ("js2-mode-invisible-overlay-bounds" function (:arguments ("&optional" "pos")) nil [418401 418839]) ("js2-mode-function-at-point" function (:arguments ("&optional" "pos")) nil [418841 419185]) ("js2-mode-toggle-element" function (:user-visible-flag t) nil [419187 420314]) ("js2-mode-hide-element" function (:user-visible-flag t) nil [420316 421246]) ("js2-mode-show-element" function (:user-visible-flag t) nil [421248 421511]) ("js2-mode-show-all" function (:user-visible-flag t) nil [421513 421650]) ("js2-mode-toggle-hide-functions" function nil nil [421652 421804]) ("js2-mode-hide-functions" function (:user-visible-flag t) nil [421806 422266]) ("js2-mode-function-hider" function (:arguments ("n" "endp")) nil [422268 422702]) ("js2-mode-show-functions" function (:user-visible-flag t) nil [422738 423224]) ("js2-mode-hide-comment" function (:arguments ("n")) nil [423226 423588]) ("js2-mode-toggle-hide-comments" function (:user-visible-flag t) nil [423590 423882]) ("js2-mode-hide-comments" function nil nil [423884 424338]) ("js2-mode-extend-//-comment" function (:arguments ("direction")) nil [424340 425057]) ("js2-mode-hide-//-comments" function nil nil [425059 425589]) ("js2-mode-toggle-//-comment" function nil nil [425591 426188]) ("js2-mode-show-comments" function (:user-visible-flag t) nil [426190 426632]) ("js2-mode-display-warnings-and-errors" function (:user-visible-flag t) nil [426634 426842]) ("js2-mode-hide-warnings-and-errors" function (:user-visible-flag t) nil [426844 427054]) ("js2-mode-toggle-warnings-and-errors" function (:user-visible-flag t) nil [427056 427570]) ("js2-mode-customize" function nil nil [427572 427647]) ("js2-mode-forward-sexp" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [427649 428903]) ("js2-next-error" function (:user-visible-flag t :arguments ("&optional" "arg" "reset")) nil [428905 430485]) ("js2-mouse-3" function (:user-visible-flag t) nil [430487 430915]) ("js2-mode-create-imenu-index" function nil nil [430917 431337]) ("js2-mode-find-tag" function nil nil [431339 431980]) ("js2-mode-forward-sibling" function nil nil [431982 432404]) ("js2-mode-backward-sibling" function nil nil [432406 432780]) ("js2-beginning-of-defun" function (:user-visible-flag t) nil [432782 433249]) ("js2-end-of-defun" function (:user-visible-flag t) nil [433251 433749]) ("js2-mark-defun" function (:user-visible-flag t :arguments ("&optional" "allow-extend")) nil [433751 435525]) ("js2-narrow-to-defun" function (:user-visible-flag t) nil [435527 435922]) ("defalias" code nil nil [435924 435956]) ("js2-mode" package nil nil [435958 435977]))
    :file "js2.el"
    :pointmax 436028
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
